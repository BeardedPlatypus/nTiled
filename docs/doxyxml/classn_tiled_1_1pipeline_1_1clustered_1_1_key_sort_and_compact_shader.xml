<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader" kind="class" language="C++" prot="public">
    <compoundname>nTiled::pipeline::clustered::KeySortAndCompactShader</compoundname>
    <basecompoundref refid="classn_tiled_1_1pipeline_1_1clustered_1_1_compute_shader" prot="public" virt="non-virtual">nTiled::pipeline::clustered::ComputeShader</basecompoundref>
    <includes refid="_key_sort_and_compact_shader_8h" local="no">KeySortAndCompactShader.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1abcbc8e91d72644095fa829fe9bb35957" prot="protected" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint nTiled::pipeline::clustered::KeySortAndCompactShader::key_sort_shader</definition>
        <argsstring></argsstring>
        <name>key_sort_shader</name>
        <briefdescription>
<para>Pointer to the opengl compute program of this <ref refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader" kindref="compound">KeySortAndCompactShader</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="85" column="1" bodyfile="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1ac05d651fd34b0976bb29a71359634ce2" prot="protected" static="no" mutable="no">
        <type>const GLuint</type>
        <definition>const GLuint nTiled::pipeline::clustered::KeySortAndCompactShader::k_texture</definition>
        <argsstring></argsstring>
        <name>k_texture</name>
        <briefdescription>
<para>openGL pointer to the input k_tex </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="90" column="1" bodyfile="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1a505b7b5bd304c40308b3f8bd953b1401" prot="protected" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint nTiled::pipeline::clustered::KeySortAndCompactShader::cluster_index_texture</definition>
        <argsstring></argsstring>
        <name>cluster_index_texture</name>
        <briefdescription>
<para>openGL pointer to the cluster index texture </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="95" column="1" bodyfile="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1a9c475df0a0aea1f52172c4f9200900ed" prot="protected" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint nTiled::pipeline::clustered::KeySortAndCompactShader::unique_clusters_texture</definition>
        <argsstring></argsstring>
        <name>unique_clusters_texture</name>
        <briefdescription>
<para>openGL pointer to the unique_clusters_texture </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="97" column="1" bodyfile="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1af64eb44d80a8396e28bbcfa99dd5f303" prot="protected" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint nTiled::pipeline::clustered::KeySortAndCompactShader::n_clusters_texture</definition>
        <argsstring></argsstring>
        <name>n_clusters_texture</name>
        <briefdescription>
<para>openGL pointer to the n_clusters imagetexture </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="99" column="1" bodyfile="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1abc17076ac0dc58424a27f087771db09a" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; GLushort &gt;</type>
        <definition>std::vector&lt;GLushort&gt; nTiled::pipeline::clustered::KeySortAndCompactShader::n_indices_tiles</definition>
        <argsstring></argsstring>
        <name>n_indices_tiles</name>
        <briefdescription>
<para>vector containing the number of indices per tile after executing this compute shader. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="104" column="1" bodyfile="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1a464d1bffe42009726c91e5bca2d71597" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; GLushort &gt;</type>
        <definition>std::vector&lt;GLushort&gt; nTiled::pipeline::clustered::KeySortAndCompactShader::k_values_tiles</definition>
        <argsstring></argsstring>
        <name>k_values_tiles</name>
        <briefdescription>
<para>vector containing the k values per tile. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="106" column="1" bodyfile="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1ae6b4b8093028a63743a165b60b847f75" prot="protected" static="no" mutable="no">
        <type>const glm::uvec2</type>
        <definition>const glm::uvec2 nTiled::pipeline::clustered::KeySortAndCompactShader::tile_size</definition>
        <argsstring></argsstring>
        <name>tile_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>tile size (xy dimensions) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="122" column="1" bodyfile="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1a6d14630917a3cd43094b444d8ab8c96c" prot="protected" static="no" mutable="no">
        <type>const glm::uvec2</type>
        <definition>const glm::uvec2 nTiled::pipeline::clustered::KeySortAndCompactShader::n_tiles</definition>
        <argsstring></argsstring>
        <name>n_tiles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>of tiles </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="124" column="1" bodyfile="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1ad47a881c2b073bbd84bb835cd48aaa43" prot="protected" static="no" mutable="no">
        <type>const glm::uvec2</type>
        <definition>const glm::uvec2 nTiled::pipeline::clustered::KeySortAndCompactShader::viewport</definition>
        <argsstring></argsstring>
        <name>viewport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>size </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="126" column="1" bodyfile="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1ac8436702aeb4f18f353683212cadd367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nTiled::pipeline::clustered::KeySortAndCompactShader::KeySortAndCompactShader</definition>
        <argsstring>(GLuint k_tex, const state::View &amp;view, glm::uvec2 tile_size)</argsstring>
        <name>KeySortAndCompactShader</name>
        <param>
          <type>GLuint</type>
          <declname>k_tex</declname>
        </param>
        <param>
          <type>const <ref refid="structn_tiled_1_1state_1_1_view" kindref="compound">state::View</ref> &amp;</type>
          <declname>view</declname>
        </param>
        <param>
          <type>glm::uvec2</type>
          <declname>tile_size</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader" kindref="compound">KeySortAndCompactShader</ref> with the given parameters. </para>        </briefdescription>
        <detaileddescription>
<para>Construct a new KeySortAndcompactShader which will use the imagetexture specified at k_tex, to consturt a set of unique clusters in k_tex, as well as an index map.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>k_tex</parametername>
</parameternamelist>
<parameterdescription>
<para>openGL pointer to the k_tex imagetexture </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>The View in which context this <ref refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader" kindref="compound">KeySortAndCompactShader</ref> will be executed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tile_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The tile size in pixels of each cluster </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="44" column="1" bodyfile="nTiled/src/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.cpp" bodystart="27" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1a76a87ca39265b4e1dea23e408e48cc49" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nTiled::pipeline::clustered::KeySortAndCompactShader::execute</definition>
        <argsstring>() override</argsstring>
        <name>execute</name>
        <reimplements refid="classn_tiled_1_1pipeline_1_1clustered_1_1_compute_shader_1a406c216bfef0545c7c6d6b2b7771da7c">execute</reimplements>
        <briefdescription>
<para>Compute the unique k values, k_index_map and total number of unique k_values per tile, based on the k_tex this <ref refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader" kindref="compound">KeySortAndCompactShader</ref> was constructed with. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="55" column="1" bodyfile="nTiled/src/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.cpp" bodystart="79" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1addbde366f8ba5c1de8a3a5c727a094c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>GLuint</type>
        <definition>virtual GLuint nTiled::pipeline::clustered::KeySortAndCompactShader::getIndexTexture</definition>
        <argsstring>() const</argsstring>
        <name>getIndexTexture</name>
        <briefdescription>
<para>Get the pointer to the index texture. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="62" column="1" bodyfile="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1a1d146ddb5a50ab6c754f1c91f889b67f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; GLushort &gt;</type>
        <definition>virtual std::vector&lt;GLushort&gt; nTiled::pipeline::clustered::KeySortAndCompactShader::getNIndicesTiles</definition>
        <argsstring>() const</argsstring>
        <name>getNIndicesTiles</name>
        <briefdescription>
<para>Get the total number of indices per tile. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="68" column="1" bodyfile="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1a506ac0c286d89c25ca58765a5f75df2e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; GLushort &gt;</type>
        <definition>virtual std::vector&lt;GLushort&gt; nTiled::pipeline::clustered::KeySortAndCompactShader::getKValuesTiles</definition>
        <argsstring>() const</argsstring>
        <name>getKValuesTiles</name>
        <briefdescription>
<para>Get the unique k_values per tile. </para>        </briefdescription>
        <detaileddescription>
<para>The values are structured as follows |(tile (0, 0): k_1, k_2, ..., k_n | (tile (0, 1): ... | etc where k_n corresponds with the total number of unique clusters in that tile </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="78" column="1" bodyfile="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" bodystart="78" bodyend="80"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1a9d90c54a5cc7cf92346f1278fdf605fe" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nTiled::pipeline::clustered::KeySortAndCompactShader::loadComputeShader</definition>
        <argsstring>()</argsstring>
        <name>loadComputeShader</name>
        <briefdescription>
<para>Load and compile the compute shader into video memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="113" column="1" bodyfile="nTiled/src/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.cpp" bodystart="183" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1acd623b5958e07b7b10e595cfaff50450" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nTiled::pipeline::clustered::KeySortAndCompactShader::specifyTexture</definition>
        <argsstring>(GLuint tex_name, GLenum format, glm::uvec2 dimensions)</argsstring>
        <name>specifyTexture</name>
        <param>
          <type>GLuint</type>
          <declname>tex_name</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>glm::uvec2</type>
          <declname>dimensions</declname>
        </param>
        <briefdescription>
<para>Specify the texture format and dimensions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="117" column="1" bodyfile="nTiled/src/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.cpp" bodystart="233" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1a4e7b081429685ca4fbf545fb01464c51" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nTiled::pipeline::clustered::KeySortAndCompactShader::printToConsole</definition>
        <argsstring>(std::string message, GLushort *values, unsigned int total_size)</argsstring>
        <name>printToConsole</name>
        <param>
          <type>std::string</type>
          <declname>message</declname>
        </param>
        <param>
          <type>GLushort *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>total_size</declname>
        </param>
        <briefdescription>
<para>Debug method to print values to console. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="132" column="1" bodyfile="nTiled/src/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.cpp" bodystart="260" bodyend="274"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader" kindref="compound">KeySortAndCompactShader</ref> is a <ref refid="classn_tiled_1_1pipeline_1_1clustered_1_1_compute_shader" kindref="compound">ComputeShader</ref> responsible for sorting and compacting the keys computed in the KeySortShader. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="512">
        <label>nTiled::pipeline::clustered::ComputeShader</label>
        <link refid="classn_tiled_1_1pipeline_1_1clustered_1_1_compute_shader"/>
      </node>
      <node id="511">
        <label>nTiled::pipeline::clustered::KeySortAndCompactShader</label>
        <link refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader"/>
        <childnode refid="512" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="514">
        <label>nTiled::pipeline::clustered::ComputeShader</label>
        <link refid="classn_tiled_1_1pipeline_1_1clustered_1_1_compute_shader"/>
      </node>
      <node id="513">
        <label>nTiled::pipeline::clustered::KeySortAndCompactShader</label>
        <link refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader"/>
        <childnode refid="514" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" line="28" column="1" bodyfile="nTiled/include/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.h" bodystart="28" bodyend="135"/>
    <listofallmembers>
      <member refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1a505b7b5bd304c40308b3f8bd953b1401" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::clustered::KeySortAndCompactShader</scope><name>cluster_index_texture</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1a76a87ca39265b4e1dea23e408e48cc49" prot="public" virt="virtual"><scope>nTiled::pipeline::clustered::KeySortAndCompactShader</scope><name>execute</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1addbde366f8ba5c1de8a3a5c727a094c3" prot="public" virt="virtual"><scope>nTiled::pipeline::clustered::KeySortAndCompactShader</scope><name>getIndexTexture</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1a506ac0c286d89c25ca58765a5f75df2e" prot="public" virt="virtual"><scope>nTiled::pipeline::clustered::KeySortAndCompactShader</scope><name>getKValuesTiles</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1a1d146ddb5a50ab6c754f1c91f889b67f" prot="public" virt="virtual"><scope>nTiled::pipeline::clustered::KeySortAndCompactShader</scope><name>getNIndicesTiles</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1ac05d651fd34b0976bb29a71359634ce2" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::clustered::KeySortAndCompactShader</scope><name>k_texture</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1a464d1bffe42009726c91e5bca2d71597" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::clustered::KeySortAndCompactShader</scope><name>k_values_tiles</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1abcbc8e91d72644095fa829fe9bb35957" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::clustered::KeySortAndCompactShader</scope><name>key_sort_shader</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1ac8436702aeb4f18f353683212cadd367" prot="public" virt="non-virtual"><scope>nTiled::pipeline::clustered::KeySortAndCompactShader</scope><name>KeySortAndCompactShader</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1a9d90c54a5cc7cf92346f1278fdf605fe" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::clustered::KeySortAndCompactShader</scope><name>loadComputeShader</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1af64eb44d80a8396e28bbcfa99dd5f303" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::clustered::KeySortAndCompactShader</scope><name>n_clusters_texture</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1abc17076ac0dc58424a27f087771db09a" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::clustered::KeySortAndCompactShader</scope><name>n_indices_tiles</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1a6d14630917a3cd43094b444d8ab8c96c" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::clustered::KeySortAndCompactShader</scope><name>n_tiles</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1a4e7b081429685ca4fbf545fb01464c51" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::clustered::KeySortAndCompactShader</scope><name>printToConsole</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1acd623b5958e07b7b10e595cfaff50450" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::clustered::KeySortAndCompactShader</scope><name>specifyTexture</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1ae6b4b8093028a63743a165b60b847f75" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::clustered::KeySortAndCompactShader</scope><name>tile_size</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1a9c475df0a0aea1f52172c4f9200900ed" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::clustered::KeySortAndCompactShader</scope><name>unique_clusters_texture</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1clustered_1_1_key_sort_and_compact_shader_1ad47a881c2b073bbd84bb835cd48aaa43" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::clustered::KeySortAndCompactShader</scope><name>viewport</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
