<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_camera_control_8cpp" kind="file" language="C++">
    <compoundname>CameraControl.cpp</compoundname>
    <includes refid="_camera_control_8h" local="yes">camera\CameraControl.h</includes>
    <includes local="no">GLFW\glfw3.h</includes>
    <includes local="no">glm/gtx/rotate_vector.hpp</includes>
    <incdepgraph>
      <node id="1973">
        <label>nTiled/src/camera/CameraControl.cpp</label>
        <link refid="_camera_control_8cpp"/>
        <childnode refid="1974" relation="include">
        </childnode>
        <childnode refid="1979" relation="include">
        </childnode>
        <childnode refid="1980" relation="include">
        </childnode>
      </node>
      <node id="1977">
        <label>glm\glm.hpp</label>
      </node>
      <node id="1974">
        <label>camera\CameraControl.h</label>
        <link refid="_camera_control_8h"/>
        <childnode refid="1975" relation="include">
        </childnode>
        <childnode refid="1976" relation="include">
        </childnode>
        <childnode refid="1977" relation="include">
        </childnode>
        <childnode refid="1978" relation="include">
        </childnode>
      </node>
      <node id="1976">
        <label>vector</label>
      </node>
      <node id="1979">
        <label>GLFW\glfw3.h</label>
      </node>
      <node id="1975">
        <label>imgui.h</label>
      </node>
      <node id="1980">
        <label>glm/gtx/rotate_vector.hpp</label>
      </node>
      <node id="1978">
        <label>camera\CameraData.h</label>
        <link refid="_camera_data_8h"/>
        <childnode refid="1977" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacen_tiled">nTiled</innernamespace>
    <innernamespace refid="namespacen_tiled_1_1camera">nTiled::camera</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_camera_control_8h" kindref="compound">camera\CameraControl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>System<sp/>Libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;GLFW\glfw3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glm/gtx/rotate_vector.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacen_tiled" kindref="compound">nTiled</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">camera<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>TurnTableControl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="classn_tiled_1_1camera_1_1_turn_table_camera_control_1a150fd17efdafa45e3d0d83b6db9f2457" kindref="member">TurnTableCameraControl::TurnTableCameraControl</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sensitivity)<sp/>:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>sensitivity(sensitivity),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>pos_prev(ImVec2())<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">TurnTableCameraControl::TurnTableCameraControl()<sp/>:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>TurnTableCameraControl(320.0)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TurnTableCameraControl::update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiIO&amp;<sp/>io,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CameraData<sp/>&amp;data)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>y<sp/>values<sp/>map<sp/>to<sp/>camera<sp/>space<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>values<sp/>map<sp/>to<sp/>world<sp/>space<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>ImVec2<sp/>pos_cur<sp/>=<sp/>io.MousePos;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>camera<sp/>x-axis<sp/>rotations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dif_y<sp/>=<sp/>(pos_cur.y<sp/>-<sp/>this-&gt;pos_prev.y);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle_x<sp/>=<sp/>(float)dif_y<sp/>/<sp/>this-&gt;sensitivity;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>glm::mat4<sp/>lookAt<sp/>=<sp/>data.lookAt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>glm::vec3<sp/>camera_x_axis<sp/>=<sp/>glm::vec3(glm::vec4(1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f)<sp/>*<sp/>lookAt);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>lookAt<sp/>=<sp/>glm::rotate(lookAt,<sp/>angle_x,<sp/>camera_x_axis);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>world<sp/>y-axis<sp/>rotations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dif_x<sp/>=<sp/>(pos_cur.x<sp/>-<sp/>this-&gt;pos_prev.x);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle_y<sp/>=<sp/>(float)dif_x<sp/>/<sp/>this-&gt;sensitivity;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>lookAt<sp/>=<sp/>glm::rotate(lookAt,<sp/>angle_y,<sp/>glm::vec3(0.0f,<sp/>1.0f,<sp/>0.0f));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>data.lookAt<sp/>=<sp/>lookAt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>this-&gt;pos_prev<sp/>=<sp/>pos_cur;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TurnTableCameraControl::activate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiIO&amp;<sp/>io)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>this-&gt;pos_prev<sp/>=<sp/>io.MousePos;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>AutomaticRotateCameraControl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">AutomaticRotateCameraControl::AutomaticRotateCameraControl(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rotation_speed)<sp/>:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>rotation_speed(rotation_speed)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>rotation<sp/>speed<sp/>in<sp/>degrees<sp/>per<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">AutomaticRotateCameraControl::AutomaticRotateCameraControl()<sp/>:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>AutomaticRotateCameraControl(60.0)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AutomaticRotateCameraControl::update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiIO&amp;<sp/>io,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CameraData<sp/>&amp;data)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>up<sp/>time<sp/>between<sp/>last<sp/>two<sp/>calls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>assume<sp/>rotation<sp/>along<sp/>the<sp/>z-axis<sp/>with<sp/>camera<sp/>speed<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>multiply<sp/>old<sp/>camera<sp/>data<sp/>with<sp/>the<sp/>matrix<sp/>based<sp/>on<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AutomaticRotateCameraControl::activate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiIO&amp;<sp/>io)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>PathCameraControl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">PathCameraControl::PathCameraControl(std::vector&lt;glm::mat4&gt;<sp/>frames)<sp/>:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>frames(frames)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PathCameraControl::update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiIO&amp;<sp/>io,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CameraData&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>look<sp/>at<sp/>matrix<sp/>of<sp/>this<sp/>frame<sp/>into<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_frame<sp/>&lt;<sp/>this-&gt;frames.size())<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>data.lookAt<sp/>=<sp/>frames[this-&gt;current_frame];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;current_frame<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PathCameraControl::activate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImGuiIO&amp;<sp/>io)<sp/>{<sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>camera</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>pipeline</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="nTiled/src/camera/CameraControl.cpp"/>
  </compounddef>
</doxygen>
