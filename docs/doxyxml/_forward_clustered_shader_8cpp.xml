<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_forward_clustered_shader_8cpp" kind="file" language="C++">
    <compoundname>ForwardClusteredShader.cpp</compoundname>
    <includes refid="_forward_clustered_shader_8h" local="yes">pipeline\forward\shaders\ForwardClusteredShader.h</includes>
    <includes local="no">glm/gtc/type_ptr.hpp</includes>
    <includes local="no">fstream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">iostream</includes>
    <includes refid="_load_shaders_8h" local="yes">pipeline\shader-util\LoadShaders.h</includes>
    <includes refid="_construct_quad_8h" local="yes">pipeline\pipeline-util\ConstructQuad.h</includes>
    <incdepgraph>
      <node id="2736">
        <label>nTiled/src/pipeline/forward/shaders/ForwardClusteredShader.cpp</label>
        <link refid="_forward_clustered_shader_8cpp"/>
        <childnode refid="2737" relation="include">
        </childnode>
        <childnode refid="2768" relation="include">
        </childnode>
        <childnode refid="2769" relation="include">
        </childnode>
        <childnode refid="2770" relation="include">
        </childnode>
        <childnode refid="2771" relation="include">
        </childnode>
        <childnode refid="2772" relation="include">
        </childnode>
        <childnode refid="2773" relation="include">
        </childnode>
      </node>
      <node id="2760">
        <label>pipeline\light-management\clustered\ClusteredLightManager.h</label>
        <link refid="_clustered_light_manager_8h"/>
        <childnode refid="2758" relation="include">
        </childnode>
        <childnode refid="2751" relation="include">
        </childnode>
        <childnode refid="2740" relation="include">
        </childnode>
        <childnode refid="2761" relation="include">
        </childnode>
        <childnode refid="2763" relation="include">
        </childnode>
        <childnode refid="2765" relation="include">
        </childnode>
        <childnode refid="2766" relation="include">
        </childnode>
      </node>
      <node id="2761">
        <label>pipeline\light-management\tiled\BoxProjector.h</label>
        <link refid="_box_projector_8h"/>
        <childnode refid="2762" relation="include">
        </childnode>
      </node>
      <node id="2747">
        <label>pipeline\ShaderKey.h</label>
        <link refid="_shader_key_8h"/>
        <childnode refid="2741" relation="include">
        </childnode>
        <childnode refid="2739" relation="include">
        </childnode>
        <childnode refid="2748" relation="include">
        </childnode>
        <childnode refid="2749" relation="include">
        </childnode>
      </node>
      <node id="2748">
        <label>pipeline\deferred\shaders\DeferredShaderId.h</label>
        <link refid="_deferred_shader_id_8h"/>
      </node>
      <node id="2763">
        <label>compute-client\KeyComputeShader.h</label>
        <link refid="_key_compute_shader_8h"/>
        <childnode refid="2758" relation="include">
        </childnode>
        <childnode refid="2746" relation="include">
        </childnode>
        <childnode refid="2764" relation="include">
        </childnode>
        <childnode refid="2751" relation="include">
        </childnode>
        <childnode refid="2757" relation="include">
        </childnode>
      </node>
      <node id="2756">
        <label>camera\CameraConstructionData.h</label>
        <link refid="_camera_construction_data_8h"/>
        <childnode refid="2746" relation="include">
        </childnode>
      </node>
      <node id="2750">
        <label>world\PointLight.h</label>
        <link refid="_point_light_8h"/>
        <childnode refid="2746" relation="include">
        </childnode>
        <childnode refid="2742" relation="include">
        </childnode>
      </node>
      <node id="2765">
        <label>compute-client\KeySortAndCompactShader.h</label>
        <link refid="_key_sort_and_compact_shader_8h"/>
        <childnode refid="2758" relation="include">
        </childnode>
        <childnode refid="2746" relation="include">
        </childnode>
        <childnode refid="2745" relation="include">
        </childnode>
        <childnode refid="2764" relation="include">
        </childnode>
        <childnode refid="2751" relation="include">
        </childnode>
      </node>
      <node id="2764">
        <label>pipeline\light-management\clustered\compute-client\ComputeShader.h</label>
        <link refid="_compute_shader_8h"/>
      </node>
      <node id="2758">
        <label>glad\glad.h</label>
      </node>
      <node id="2752">
        <label>camera\Camera.h</label>
        <link refid="_camera_8h"/>
        <childnode refid="2746" relation="include">
        </childnode>
        <childnode refid="2753" relation="include">
        </childnode>
        <childnode refid="2755" relation="include">
        </childnode>
        <childnode refid="2756" relation="include">
        </childnode>
      </node>
      <node id="2741">
        <label>string</label>
      </node>
      <node id="2746">
        <label>glm\glm.hpp</label>
      </node>
      <node id="2743">
        <label>map</label>
      </node>
      <node id="2762">
        <label>pipeline\light-management\tiled\LightProjector.h</label>
        <link refid="_light_projector_8h"/>
        <childnode refid="2745" relation="include">
        </childnode>
        <childnode refid="2750" relation="include">
        </childnode>
        <childnode refid="2752" relation="include">
        </childnode>
      </node>
      <node id="2749">
        <label>pipeline\PipelineType.h</label>
        <link refid="_pipeline_type_8h"/>
      </node>
      <node id="2751">
        <label>state\StateView.h</label>
        <link refid="_state_view_8h"/>
        <childnode refid="2752" relation="include">
        </childnode>
      </node>
      <node id="2773">
        <label>pipeline\pipeline-util\ConstructQuad.h</label>
        <link refid="_construct_quad_8h"/>
        <childnode refid="2757" relation="include">
        </childnode>
      </node>
      <node id="2769">
        <label>fstream</label>
      </node>
      <node id="2767">
        <label>pipeline\forward\DepthBuffer.h</label>
        <link refid="_depth_buffer_8h_source"/>
        <childnode refid="2758" relation="include">
        </childnode>
      </node>
      <node id="2753">
        <label>camera\CameraControl.h</label>
        <link refid="_camera_control_8h"/>
        <childnode refid="2754" relation="include">
        </childnode>
        <childnode refid="2745" relation="include">
        </childnode>
        <childnode refid="2746" relation="include">
        </childnode>
        <childnode refid="2755" relation="include">
        </childnode>
      </node>
      <node id="2740">
        <label>world\World.h</label>
        <link refid="_world_8h"/>
        <childnode refid="2741" relation="include">
        </childnode>
        <childnode refid="2742" relation="include">
        </childnode>
        <childnode refid="2750" relation="include">
        </childnode>
      </node>
      <node id="2768">
        <label>glm/gtc/type_ptr.hpp</label>
      </node>
      <node id="2739">
        <label>pipeline\forward\shaders\ForwardShaderId.h</label>
        <link refid="_forward_shader_id_8h"/>
      </node>
      <node id="2745">
        <label>vector</label>
      </node>
      <node id="2770">
        <label>sstream</label>
      </node>
      <node id="2772">
        <label>pipeline\shader-util\LoadShaders.h</label>
        <link refid="_load_shaders_8h"/>
        <childnode refid="2758" relation="include">
        </childnode>
        <childnode refid="2741" relation="include">
        </childnode>
      </node>
      <node id="2754">
        <label>imgui.h</label>
      </node>
      <node id="2771">
        <label>iostream</label>
      </node>
      <node id="2737">
        <label>pipeline\forward\shaders\ForwardClusteredShader.h</label>
        <link refid="_forward_clustered_shader_8h"/>
        <childnode refid="2738" relation="include">
        </childnode>
        <childnode refid="2760" relation="include">
        </childnode>
        <childnode refid="2767" relation="include">
        </childnode>
      </node>
      <node id="2757">
        <label>pipeline\PipelineObject.h</label>
        <link refid="_pipeline_object_8h"/>
        <childnode refid="2758" relation="include">
        </childnode>
        <childnode refid="2746" relation="include">
        </childnode>
      </node>
      <node id="2759">
        <label>pipeline\PipelineLight.h</label>
        <link refid="_pipeline_light_8h"/>
        <childnode refid="2758" relation="include">
        </childnode>
        <childnode refid="2746" relation="include">
        </childnode>
      </node>
      <node id="2738">
        <label>ForwardShader.h</label>
        <link refid="_forward_shader_8h"/>
        <childnode refid="2739" relation="include">
        </childnode>
        <childnode refid="2740" relation="include">
        </childnode>
        <childnode refid="2751" relation="include">
        </childnode>
        <childnode refid="2757" relation="include">
        </childnode>
        <childnode refid="2759" relation="include">
        </childnode>
      </node>
      <node id="2766">
        <label>LightClustering.h</label>
        <link refid="_light_clustering_8h"/>
        <childnode refid="2758" relation="include">
        </childnode>
        <childnode refid="2746" relation="include">
        </childnode>
        <childnode refid="2745" relation="include">
        </childnode>
      </node>
      <node id="2755">
        <label>camera\CameraData.h</label>
        <link refid="_camera_data_8h"/>
        <childnode refid="2746" relation="include">
        </childnode>
      </node>
      <node id="2744">
        <label>world\Mesh.h</label>
        <link refid="_mesh_8h"/>
        <childnode refid="2745" relation="include">
        </childnode>
        <childnode refid="2746" relation="include">
        </childnode>
      </node>
      <node id="2742">
        <label>world\Object.h</label>
        <link refid="_object_8h"/>
        <childnode refid="2743" relation="include">
        </childnode>
        <childnode refid="2744" relation="include">
        </childnode>
        <childnode refid="2747" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacen_tiled">nTiled</innernamespace>
    <innernamespace refid="namespacen_tiled_1_1pipeline">nTiled::pipeline</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_forward_clustered_shader_8cpp_1a429b77649dcbc210bb736f5d0b17999d" prot="public" static="no">
        <name>VERT_PATH_DEPTH</name>
        <initializer>std::string(&quot;C:/Users/Monthy/Documents/projects/thesis/implementation_new/nTiled/nTiled/src/pipeline/forward/shaders-glsl/depth_clustered.vert&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/src/pipeline/forward/shaders/ForwardClusteredShader.cpp" line="21" column="9" bodyfile="nTiled/src/pipeline/forward/shaders/ForwardClusteredShader.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_forward_clustered_shader_8cpp_1a2bc45d11bf5e826d3e35d06b5bf01cdc" prot="public" static="no">
        <name>FRAG_PATH_DEPTH</name>
        <initializer>std::string(&quot;C:/Users/Monthy/Documents/projects/thesis/implementation_new/nTiled/nTiled/src/pipeline/forward/shaders-glsl/depth_clustered.frag&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/src/pipeline/forward/shaders/ForwardClusteredShader.cpp" line="22" column="9" bodyfile="nTiled/src/pipeline/forward/shaders/ForwardClusteredShader.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_forward_clustered_shader_8cpp_1af23e18062c0ccbc5a6aaba09ec2fc054" prot="public" static="no">
        <name>VERT_PATH_COPY</name>
        <initializer>std::string(&quot;C:/Users/Monthy/Documents/projects/thesis/implementation_new/nTiled/nTiled/src/pipeline/forward/shaders-glsl/copy_depth.vert&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/src/pipeline/forward/shaders/ForwardClusteredShader.cpp" line="24" column="9" bodyfile="nTiled/src/pipeline/forward/shaders/ForwardClusteredShader.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_forward_clustered_shader_8cpp_1a56d64e658216e6995c2398dde088fccb" prot="public" static="no">
        <name>FRAG_PATH_COPY</name>
        <initializer>std::string(&quot;C:/Users/Monthy/Documents/projects/thesis/implementation_new/nTiled/nTiled/src/pipeline/forward/shaders-glsl/copy_depth.frag&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/src/pipeline/forward/shaders/ForwardClusteredShader.cpp" line="25" column="9" bodyfile="nTiled/src/pipeline/forward/shaders/ForwardClusteredShader.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_forward_clustered_shader_8h" kindref="compound">pipeline\forward\shaders\ForwardClusteredShader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glm/gtc/type_ptr.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>nTiled<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_load_shaders_8h" kindref="compound">pipeline\shader-util\LoadShaders.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_construct_quad_8h" kindref="compound">pipeline\pipeline-util\ConstructQuad.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Defines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERT_PATH_DEPTH<sp/>std::string(&quot;C:/Users/Monthy/Documents/projects/thesis/implementation_new/nTiled/nTiled/src/pipeline/forward/shaders-glsl/depth_clustered.vert&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FRAG_PATH_DEPTH<sp/>std::string(&quot;C:/Users/Monthy/Documents/projects/thesis/implementation_new/nTiled/nTiled/src/pipeline/forward/shaders-glsl/depth_clustered.frag&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERT_PATH_COPY<sp/>std::string(&quot;C:/Users/Monthy/Documents/projects/thesis/implementation_new/nTiled/nTiled/src/pipeline/forward/shaders-glsl/copy_depth.vert&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FRAG_PATH_COPY<sp/>std::string(&quot;C:/Users/Monthy/Documents/projects/thesis/implementation_new/nTiled/nTiled/src/pipeline/forward/shaders-glsl/copy_depth.frag&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacen_tiled" kindref="compound">nTiled</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pipeline<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="classn_tiled_1_1pipeline_1_1_forward_clustered_shader_1a2d41a3759d2082b911f642395fc976c8" kindref="member">ForwardClusteredShader::ForwardClusteredShader</ref>(</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>ForwardShaderId<sp/>shader_id,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path_vertex_shader,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path_fragment_shader,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>world::World&amp;<sp/>world,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>state::View&amp;<sp/>view,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>p_output_buffer,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::uvec2<sp/>tile_size,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ClusteredLightManagerBuilder&amp;<sp/>light_manager_builder)<sp/>:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>ForwardShader(shader_id,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path_vertex_shader,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path_fragment_shader,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>world,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_output_buffer),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>depth_buffer(DepthBuffer(view.viewport.x,<sp/>view.viewport.y)),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>p_clustered_light_manager(</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>light_manager_builder.constructNewClusteredLightManager(</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>view,<sp/>world,<sp/>tile_size,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;depth_buffer.getPointerDepthTexture()))<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>glUseProgram(this-&gt;shader);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>uniform<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>GLuint<sp/>n_tiles_x<sp/>=<sp/>this-&gt;view.viewport.x<sp/>/<sp/>tile_size.x;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tile_size.x<sp/>*<sp/>n_tiles_x<sp/>&lt;<sp/>this-&gt;view.viewport.x)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>n_tiles_x++;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>GLint<sp/>p_tile_size<sp/>=<sp/>glGetUniformLocation(this-&gt;shader,<sp/></highlight><highlight class="stringliteral">&quot;tile_size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>GLint<sp/>p_n_tiles_x<sp/>=<sp/>glGetUniformLocation(this-&gt;shader,<sp/></highlight><highlight class="stringliteral">&quot;n_tiles_x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>glUniform2uiv(p_tile_size,<sp/>1,<sp/>glm::value_ptr(tile_size));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>glUniform1ui(p_n_tiles_x,<sp/>n_tiles_x);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialise<sp/>light<sp/>management<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>Shader<sp/>Storage<sp/>Buffer<sp/>Objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>GLuint<sp/>ssbo_handles[3];</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>glGenBuffers(3,<sp/>ssbo_handles);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>this-&gt;summed_indices_buffer<sp/>=<sp/>ssbo_handles[0];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>this-&gt;light_cluster_buffer<sp/>=<sp/>ssbo_handles[1];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>this-&gt;light_index_buffer<sp/>=<sp/>ssbo_handles[2];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>LightGrid<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>glBindBufferBase(GL_SHADER_STORAGE_BUFFER,<sp/>0,<sp/>this-&gt;summed_indices_buffer);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>glBindBufferBase(GL_SHADER_STORAGE_BUFFER,<sp/>1,<sp/>this-&gt;light_cluster_buffer);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>glBindBufferBase(GL_SHADER_STORAGE_BUFFER,<sp/>2,<sp/>this-&gt;light_index_buffer);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_SHADER_STORAGE_BUFFER,<sp/>0);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Link<sp/>usampler<sp/>k_tex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>GLint<sp/>p_k_index_texture<sp/>=<sp/>glGetUniformLocation(this-&gt;shader,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;k_index_tex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>glUniform1i(p_k_index_texture,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_TEXTURE0);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>glUseProgram(0);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>this-&gt;fullscreen_quad<sp/>=<sp/><ref refid="_construct_quad_8h_1a617065c2f74bd9f4b98a8d0e5a103fa9" kindref="member">constructQuad</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>depth<sp/>pass<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertex<sp/>Shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>vert_shader_buffer<sp/>=<sp/><ref refid="_load_shaders_8h_1a46b5c96a4423e860bec31ccdd0c64d26" kindref="member">readShader</ref>(VERT_PATH_DEPTH);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>GLuint<sp/>vert_shader<sp/>=<sp/><ref refid="_load_shaders_8h_1a70dceef54a874acb2db9c9e48ce564ff" kindref="member">compileShader</ref>(GL_VERTEX_SHADER,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vert_shader_buffer.str());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fragment<sp/>Shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>frag_shader_buffer<sp/>=<sp/><ref refid="_load_shaders_8h_1a46b5c96a4423e860bec31ccdd0c64d26" kindref="member">readShader</ref>(FRAG_PATH_DEPTH);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>GLuint<sp/>frag_shader<sp/>=<sp/><ref refid="_load_shaders_8h_1a70dceef54a874acb2db9c9e48ce564ff" kindref="member">compileShader</ref>(GL_FRAGMENT_SHADER,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frag_shader_buffer.str());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>this-&gt;depth_pass_shader<sp/>=<sp/><ref refid="_load_shaders_8h_1a6d86003dd1fbf838cd1d074ca63effe9" kindref="member">createProgram</ref>(vert_shader,<sp/>frag_shader);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>glm::mat4<sp/>perspective_matrix<sp/>=<sp/>view.camera.getPerspectiveMatrix();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>GLint<sp/>p_camera_to_clip<sp/>=<sp/>glGetUniformLocation(this-&gt;depth_pass_shader,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;camera_to_clip&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>glUseProgram(this-&gt;depth_pass_shader);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>glUniformMatrix4fv(p_camera_to_clip,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_FALSE,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::value_ptr(perspective_matrix));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>glUseProgram(0);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>depth<sp/>copy<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>vert_copy_shader_buffer<sp/>=<sp/><ref refid="_load_shaders_8h_1a46b5c96a4423e860bec31ccdd0c64d26" kindref="member">readShader</ref>(VERT_PATH_COPY);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>GLuint<sp/>vert_copy_shader<sp/>=<sp/><ref refid="_load_shaders_8h_1a70dceef54a874acb2db9c9e48ce564ff" kindref="member">compileShader</ref>(GL_VERTEX_SHADER,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vert_copy_shader_buffer.str());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>frag_copy_shader_buffer<sp/>=<sp/><ref refid="_load_shaders_8h_1a46b5c96a4423e860bec31ccdd0c64d26" kindref="member">readShader</ref>(FRAG_PATH_COPY);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>GLuint<sp/>frag_copy_shader<sp/>=<sp/><ref refid="_load_shaders_8h_1a70dceef54a874acb2db9c9e48ce564ff" kindref="member">compileShader</ref>(GL_FRAGMENT_SHADER,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frag_copy_shader_buffer.str());</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>this-&gt;depth_copy_shader<sp/>=<sp/><ref refid="_load_shaders_8h_1a6d86003dd1fbf838cd1d074ca63effe9" kindref="member">createProgram</ref>(vert_copy_shader,<sp/>frag_copy_shader);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>GLint<sp/>p_viewport<sp/>=<sp/>glGetUniformLocation(this-&gt;depth_copy_shader,<sp/></highlight><highlight class="stringliteral">&quot;viewport&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>glm::vec4<sp/>viewport<sp/>=<sp/>glm::vec4(0.0f,<sp/>0.0f,<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;view.viewport.x,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;view.viewport.y);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>GLint<sp/>p_colour_texture<sp/>=<sp/>glGetUniformLocation(this-&gt;depth_copy_shader,<sp/></highlight><highlight class="stringliteral">&quot;colour_tex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>glUseProgram(this-&gt;depth_copy_shader);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>glUniform4fv(p_viewport,<sp/>1,<sp/>glm::value_ptr(viewport));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>glUniform1i(p_colour_texture,<sp/>GL_TEXTURE0);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>glUseProgram(0);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ForwardClusteredShader::render()<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>this-&gt;depthPass();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>this-&gt;p_clustered_light_manager-&gt;constructClusteringFrame();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>glUseProgram(this-&gt;shader);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>this-&gt;loadLightClustering();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>this-&gt;renderObjects();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>glUseProgram(0);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>this-&gt;copyResult();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>glDepthMask(GL_TRUE);<sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ForwardClusteredShader::depthPass()<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>glUseProgram(this-&gt;depth_pass_shader);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>this-&gt;depth_buffer.bindForWriting();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>the<sp/>FBO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>glDepthMask(GL_TRUE);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>glColorMask(GL_TRUE,<sp/>GL_TRUE,<sp/>GL_TRUE,<sp/>GL_TRUE);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>glClearColor(0,<sp/>0,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>glClearDepth(1.0f);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>glClear(GL_COLOR_BUFFER_BIT<sp/>|<sp/>GL_DEPTH_BUFFER_BIT);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>depth<sp/>openGL<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>glEnable(GL_DEPTH_TEST);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>glDepthMask(GL_TRUE);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>glDepthFunc(GL_LESS);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>glColorMask(GL_FALSE,<sp/>GL_FALSE,<sp/>GL_FALSE,<sp/>GL_FALSE);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>depth<sp/>to<sp/>texture<sp/>FBO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>glm::mat4<sp/>lookAt<sp/>=<sp/>this-&gt;view.camera.getLookAt();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>GLint<sp/>p_modelToCamera<sp/>=<sp/>glGetUniformLocation(this-&gt;shader,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;model_to_camera&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(PipelineObject*<sp/>p_obj<sp/>:<sp/>this-&gt;ps_obj)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>model<sp/>to<sp/>camera</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>model_to_camera<sp/>=<sp/>lookAt<sp/>*<sp/>p_obj-&gt;transformation_matrix;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv(p_modelToCamera,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_FALSE,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::value_ptr(model_to_camera));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Render<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(p_obj-&gt;vao);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_obj-&gt;element_buffer);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>glDrawElements(GL_TRIANGLES,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_obj-&gt;n_elements,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_UNSIGNED_INT,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>glBindVertexArray(0);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>glUseProgram(0);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>openGL<sp/>flags<sp/>for<sp/>further<sp/>execution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>glDepthMask(GL_FALSE);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>glDepthFunc(GL_EQUAL);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>glColorMask(GL_TRUE,<sp/>GL_TRUE,<sp/>GL_TRUE,<sp/>GL_TRUE);</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ForwardClusteredShader::loadLightClustering()<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;GLuint&gt;&amp;<sp/>summed_indices<sp/>=<sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;p_clustered_light_manager-&gt;getSummedIndicesData();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;glm::uvec2&gt;&amp;<sp/>light_clusters<sp/>=<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;p_clustered_light_manager-&gt;getLightClusterData();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;GLuint&gt;&amp;<sp/>light_indices<sp/>=</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;p_clustered_light_manager-&gt;getLightIndexData();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_SHADER_STORAGE_BUFFER,<sp/>this-&gt;summed_indices_buffer);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>glBufferData(GL_SHADER_STORAGE_BUFFER,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(GLuint)<sp/>*<sp/>summed_indices.size(),</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summed_indices.data(),</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_SHADER_STORAGE_BUFFER,<sp/>this-&gt;light_cluster_buffer);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>glBufferData(GL_SHADER_STORAGE_BUFFER,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(light_clusters[0])<sp/>*<sp/>light_clusters.size(),</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>light_clusters.data(),</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_SHADER_STORAGE_BUFFER,<sp/>this-&gt;light_index_buffer);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>glBufferData(GL_SHADER_STORAGE_BUFFER,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(GLuint)<sp/>*<sp/>light_indices.size(),<sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>light_indices.data(),</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_SHADER_STORAGE_BUFFER,<sp/>0);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>glActiveTexture(GL_TEXTURE0);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>this-&gt;k_index_map);</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ForwardClusteredShader::copyResult()<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>glUseProgram(this-&gt;depth_copy_shader);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>glDisable(GL_DEPTH_TEST);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>glBindFramebuffer(GL_DRAW_FRAMEBUFFER,<sp/>this-&gt;p_output_buffer);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>this-&gt;depth_buffer.bindForReading();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>glBindVertexArray(this-&gt;fullscreen_quad-&gt;vao);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;fullscreen_quad-&gt;element_buffer);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>glDrawElements(GL_TRIANGLES,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;fullscreen_quad-&gt;n_elements,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_UNSIGNED_SHORT,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>glUseProgram(0);</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="263"><highlight class="comment">GLuint<sp/>attachDepthTexture(GLuint<sp/>width,</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLuint<sp/>height)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/>glBindFramebuffer(GL_DRAW_BUFFER,<sp/>0);</highlight></codeline>
<codeline lineno="266"><highlight class="comment"></highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/>GLuint<sp/>p_depth_texture;</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/>glGenTextures(1,<sp/>&amp;p_depth_texture);</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>p_depth_texture);</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_NEAREST);</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MAG_FILTER,<sp/>GL_NEAREST);</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_WRAP_S,<sp/>GL_CLAMP_TO_EDGE);</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_WRAP_T,<sp/>GL_CLAMP_TO_EDGE);</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/>glTexImage2D(GL_TEXTURE_2D,</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DEPTH_COMPONENT32F,</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width,<sp/>height,</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DEPTH_COMPONENT,</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_FLOAT,</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/>glFramebufferTexture2D(GL_DRAW_FRAMEBUFFER,</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DEPTH_ATTACHMENT,</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_TEXTURE_2D,</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_depth_texture,</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>0);</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/>return<sp/>p_depth_texture;</highlight></codeline>
<codeline lineno="291"><highlight class="comment">}</highlight></codeline>
<codeline lineno="292"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>nTiled</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="nTiled/src/pipeline/forward/shaders/ForwardClusteredShader.cpp"/>
  </compounddef>
</doxygen>
