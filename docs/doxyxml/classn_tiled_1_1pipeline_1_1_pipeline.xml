<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="classn_tiled_1_1pipeline_1_1_pipeline" kind="class" language="C++" prot="public">
    <compoundname>nTiled::pipeline::Pipeline</compoundname>
    <derivedcompoundref refid="classn_tiled_1_1pipeline_1_1_debug_pipeline" prot="public" virt="non-virtual">nTiled::pipeline::DebugPipeline</derivedcompoundref>
    <derivedcompoundref refid="classn_tiled_1_1pipeline_1_1_deferred_pipeline" prot="public" virt="non-virtual">nTiled::pipeline::DeferredPipeline</derivedcompoundref>
    <derivedcompoundref refid="classn_tiled_1_1pipeline_1_1_forward_pipeline" prot="public" virt="non-virtual">nTiled::pipeline::ForwardPipeline</derivedcompoundref>
    <includes refid="_pipeline_8h" local="no">Pipeline.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1_pipeline_1a86747875a6495abc36cbac1d1a50ad8d" prot="protected" static="no" mutable="no">
        <type><ref refid="structn_tiled_1_1state_1_1_state" kindref="compound">state::State</ref> &amp;</type>
        <definition>state::State&amp; nTiled::pipeline::Pipeline::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
<para>Reference to the State of this <ref refid="classn_tiled_1_1pipeline_1_1_pipeline" kindref="compound">Pipeline</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/Pipeline.h" line="57" column="1" bodyfile="nTiled/include/pipeline/Pipeline.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1_pipeline_1ac040cb57123ba44a0dda955aa18f26aa" prot="protected" static="no" mutable="no">
        <type>GLint</type>
        <definition>GLint nTiled::pipeline::Pipeline::output_buffer</definition>
        <argsstring></argsstring>
        <name>output_buffer</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>openGL Pointer to the output buffer of this <ref refid="classn_tiled_1_1pipeline_1_1_pipeline" kindref="compound">Pipeline</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/Pipeline.h" line="59" column="1" bodyfile="nTiled/include/pipeline/Pipeline.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_pipeline_1af388a427797bbfffdc34d9f518be180d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nTiled::pipeline::Pipeline::Pipeline</definition>
        <argsstring>(state::State &amp;state)</argsstring>
        <name>Pipeline</name>
        <param>
          <type><ref refid="structn_tiled_1_1state_1_1_state" kindref="compound">state::State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classn_tiled_1_1pipeline_1_1_pipeline" kindref="compound">Pipeline</ref> with the given state. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the state this <ref refid="classn_tiled_1_1pipeline_1_1_pipeline" kindref="compound">Pipeline</ref> renders. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/Pipeline.h" line="32" column="1" bodyfile="nTiled/src/pipeline/Pipeline.cpp" bodystart="6" bodyend="6"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_pipeline_1a703bd7614a2b5f68145d9e18906d727d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual nTiled::pipeline::Pipeline::~Pipeline</definition>
        <argsstring>()</argsstring>
        <name>~Pipeline</name>
        <briefdescription>
<para>Destruct this <ref refid="classn_tiled_1_1pipeline_1_1_pipeline" kindref="compound">Pipeline</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/Pipeline.h" line="36" column="1" bodyfile="nTiled/include/pipeline/Pipeline.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_pipeline_1a3bd91d1ee7b43c62e7cc3a93a421b79f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nTiled::pipeline::Pipeline::initialiseShaders</definition>
        <argsstring>()</argsstring>
        <name>initialiseShaders</name>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_deferred_pipeline_1a3e6e6869d1635027cb4ab3de42a7e26d">initialiseShaders</reimplementedby>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_forward_pipeline_1a94cfacd758077c9034bf7045cd691ac1">initialiseShaders</reimplementedby>
        <briefdescription>
<para>Initialise the shaders of this <ref refid="classn_tiled_1_1pipeline_1_1_pipeline" kindref="compound">Pipeline</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/Pipeline.h" line="40" column="1" bodyfile="nTiled/src/pipeline/Pipeline.cpp" bodystart="8" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_pipeline_1a3d1eac3756c298d3061df472a3fb08e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nTiled::pipeline::Pipeline::render</definition>
        <argsstring>()</argsstring>
        <name>render</name>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_deferred_pipeline_1a10c237a29892383752156b62b9a83d2c">render</reimplementedby>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_forward_pipeline_1a7e4e60da1a781c4981752eb83ee6199d">render</reimplementedby>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_debug_pipeline_1ab43bd4c4c9f7c90586245bb56ee0414c">render</reimplementedby>
        <briefdescription>
<para>Render the state of this <ref refid="classn_tiled_1_1pipeline_1_1_pipeline" kindref="compound">Pipeline</ref> into the framebuffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/Pipeline.h" line="47" column="1" bodyfile="nTiled/src/pipeline/Pipeline.cpp" bodystart="10" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_pipeline_1a95ba94528a72ca8826e19923ff76c282" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void nTiled::pipeline::Pipeline::setOutputBuffer</definition>
        <argsstring>(GLint p_fbo)</argsstring>
        <name>setOutputBuffer</name>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_deferred_pipeline_1a352077d28a63d2075595fdcf6a0645ce">setOutputBuffer</reimplementedby>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_forward_pipeline_1a7926a6c36147af64fc152e6dbc6ccfce">setOutputBuffer</reimplementedby>
        <param>
          <type>GLint</type>
          <declname>p_fbo</declname>
        </param>
        <briefdescription>
<para>Set the output buffer of this <ref refid="classn_tiled_1_1pipeline_1_1_pipeline" kindref="compound">Pipeline</ref> to p_fbo. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_fbo</parametername>
</parameternamelist>
<parameterdescription>
<para>openGL Pointer to the new output buffer of this <ref refid="classn_tiled_1_1pipeline_1_1_pipeline" kindref="compound">Pipeline</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/Pipeline.h" line="53" column="1" bodyfile="nTiled/include/pipeline/Pipeline.h" bodystart="53" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classn_tiled_1_1pipeline_1_1_pipeline" kindref="compound">Pipeline</ref> is the base class of all <ref refid="classn_tiled_1_1pipeline_1_1_pipeline" kindref="compound">Pipeline</ref> objects in nTiled. It contains the interface which nTiled uses to render with a specific <ref refid="classn_tiled_1_1pipeline_1_1_pipeline" kindref="compound">Pipeline</ref>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="540">
        <label>nTiled::pipeline::DeferredPipelineLogged</label>
        <link refid="classn_tiled_1_1pipeline_1_1_deferred_pipeline_logged"/>
        <childnode refid="539" relation="public-inheritance">
        </childnode>
      </node>
      <node id="541">
        <label>nTiled::pipeline::ForwardPipeline</label>
        <link refid="classn_tiled_1_1pipeline_1_1_forward_pipeline"/>
        <childnode refid="537" relation="public-inheritance">
        </childnode>
      </node>
      <node id="538">
        <label>nTiled::pipeline::DebugPipeline</label>
        <link refid="classn_tiled_1_1pipeline_1_1_debug_pipeline"/>
        <childnode refid="537" relation="public-inheritance">
        </childnode>
      </node>
      <node id="542">
        <label>nTiled::pipeline::ForwardPipelineLogged</label>
        <link refid="classn_tiled_1_1pipeline_1_1_forward_pipeline_logged"/>
        <childnode refid="541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="539">
        <label>nTiled::pipeline::DeferredPipeline</label>
        <link refid="classn_tiled_1_1pipeline_1_1_deferred_pipeline"/>
        <childnode refid="537" relation="public-inheritance">
        </childnode>
      </node>
      <node id="537">
        <label>nTiled::pipeline::Pipeline</label>
        <link refid="classn_tiled_1_1pipeline_1_1_pipeline"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="554">
        <label>nTiled::state::ViewOutput</label>
        <link refid="structn_tiled_1_1state_1_1_view_output"/>
      </node>
      <node id="548">
        <label>nTiled::state::TextureCatalog</label>
        <link refid="classn_tiled_1_1state_1_1_texture_catalog"/>
      </node>
      <node id="545">
        <label>nTiled::state::Log</label>
        <link refid="structn_tiled_1_1state_1_1_log"/>
      </node>
      <node id="550">
        <label>nTiled::camera::CameraControl</label>
        <link refid="classn_tiled_1_1camera_1_1_camera_control"/>
      </node>
      <node id="544">
        <label>nTiled::state::State</label>
        <link refid="structn_tiled_1_1state_1_1_state"/>
        <childnode refid="545" relation="usage">
          <edgelabel>log</edgelabel>
        </childnode>
        <childnode refid="546" relation="usage">
          <edgelabel>p_world</edgelabel>
        </childnode>
        <childnode refid="547" relation="usage">
          <edgelabel>shading</edgelabel>
        </childnode>
        <childnode refid="548" relation="usage">
          <edgelabel>texture_catalog</edgelabel>
        </childnode>
        <childnode refid="549" relation="usage">
          <edgelabel>view</edgelabel>
        </childnode>
      </node>
      <node id="551">
        <label>nTiled::camera::Camera</label>
        <link refid="classn_tiled_1_1camera_1_1_camera"/>
        <childnode refid="552" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="550" relation="usage">
          <edgelabel>control</edgelabel>
        </childnode>
        <childnode refid="553" relation="usage">
          <edgelabel>construction_data</edgelabel>
        </childnode>
      </node>
      <node id="552">
        <label>nTiled::camera::CameraData</label>
        <link refid="structn_tiled_1_1camera_1_1_camera_data"/>
      </node>
      <node id="549">
        <label>nTiled::state::View</label>
        <link refid="structn_tiled_1_1state_1_1_view"/>
        <childnode refid="550" relation="usage">
          <edgelabel>camera_control</edgelabel>
        </childnode>
        <childnode refid="551" relation="usage">
          <edgelabel>camera</edgelabel>
        </childnode>
        <childnode refid="554" relation="usage">
          <edgelabel>output</edgelabel>
        </childnode>
      </node>
      <node id="546">
        <label>nTiled::world::World</label>
        <link refid="classn_tiled_1_1world_1_1_world"/>
      </node>
      <node id="553">
        <label>nTiled::camera::CameraConstructionData</label>
        <link refid="structn_tiled_1_1camera_1_1_camera_construction_data"/>
      </node>
      <node id="547">
        <label>nTiled::state::Shading</label>
        <link refid="structn_tiled_1_1state_1_1_shading"/>
      </node>
      <node id="543">
        <label>nTiled::pipeline::Pipeline</label>
        <link refid="classn_tiled_1_1pipeline_1_1_pipeline"/>
        <childnode refid="544" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="nTiled/include/pipeline/Pipeline.h" line="23" column="1" bodyfile="nTiled/include/pipeline/Pipeline.h" bodystart="23" bodyend="60"/>
    <listofallmembers>
      <member refid="classn_tiled_1_1pipeline_1_1_pipeline_1a3bd91d1ee7b43c62e7cc3a93a421b79f" prot="public" virt="virtual"><scope>nTiled::pipeline::Pipeline</scope><name>initialiseShaders</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_pipeline_1ac040cb57123ba44a0dda955aa18f26aa" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::Pipeline</scope><name>output_buffer</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_pipeline_1af388a427797bbfffdc34d9f518be180d" prot="public" virt="non-virtual"><scope>nTiled::pipeline::Pipeline</scope><name>Pipeline</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_pipeline_1a3d1eac3756c298d3061df472a3fb08e0" prot="public" virt="virtual"><scope>nTiled::pipeline::Pipeline</scope><name>render</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_pipeline_1a95ba94528a72ca8826e19923ff76c282" prot="public" virt="virtual"><scope>nTiled::pipeline::Pipeline</scope><name>setOutputBuffer</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_pipeline_1a86747875a6495abc36cbac1d1a50ad8d" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::Pipeline</scope><name>state</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_pipeline_1a703bd7614a2b5f68145d9e18906d727d" prot="public" virt="virtual"><scope>nTiled::pipeline::Pipeline</scope><name>~Pipeline</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
