<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_state_log_8cpp" kind="file" language="C++">
    <compoundname>StateLog.cpp</compoundname>
    <includes refid="_state_log_8h" local="yes">state\StateLog.h</includes>
    <incdepgraph>
      <node id="3326">
        <label>state\StateLog.h</label>
        <link refid="_state_log_8h"/>
        <childnode refid="3327" relation="include">
        </childnode>
      </node>
      <node id="3327">
        <label>string</label>
      </node>
      <node id="3325">
        <label>nTiled/src/state/StateLog.cpp</label>
        <link refid="_state_log_8cpp"/>
        <childnode refid="3326" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacen_tiled">nTiled</innernamespace>
    <innernamespace refid="namespacen_tiled_1_1state">nTiled::state</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_state_log_8h" kindref="compound">state\StateLog.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacen_tiled" kindref="compound">nTiled</ref><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">state<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><ref refid="structn_tiled_1_1state_1_1_log_1a88e1399295084b29d54c4b77531012e6" kindref="member">Log::Log</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_logging_data,</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>path,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_start,<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_end,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exit_after_done,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exit_frame)<sp/>:</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>is_logging_data(is_logging_data),</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>path(path),</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>frame_start(frame_start),<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>frame_end(frame_end),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>exit_after_done(exit_after_done),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>exit_frame(exit_frame)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">Log::Log(std::string<sp/>path,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_start,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_end)<sp/>:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>Log(true,<sp/>path,<sp/>frame_start,<sp/>frame_end,<sp/>false,<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">Log::Log()<sp/>:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>Log(false,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>0,<sp/>0,<sp/>false,<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="nTiled/src/state/StateLog.cpp"/>
  </compounddef>
</doxygen>
