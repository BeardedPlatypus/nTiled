<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="structn_tiled_1_1state_1_1_log" kind="struct" language="C++" prot="public">
    <compoundname>nTiled::state::Log</compoundname>
    <includes refid="_state_log_8h" local="no">StateLog.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structn_tiled_1_1state_1_1_log_1a63e4b06527fe24f2f74a73b1022b38c1" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nTiled::state::Log::is_logging_data</definition>
        <argsstring></argsstring>
        <name>is_logging_data</name>
        <briefdescription>
<para>Whether this run of nTiled is logging data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/state/StateLog.h" line="53" column="1" bodyfile="nTiled/include/state/StateLog.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structn_tiled_1_1state_1_1_log_1a7a21a5c3d7bfc73cf84b8046ce1df047" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string nTiled::state::Log::path</definition>
        <argsstring></argsstring>
        <name>path</name>
        <briefdescription>
<para>The path to where the logged data should be written. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/state/StateLog.h" line="55" column="1" bodyfile="nTiled/include/state/StateLog.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structn_tiled_1_1state_1_1_log_1aea82822e28a23e831daab8a4eeab5015" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int nTiled::state::Log::frame_start</definition>
        <argsstring></argsstring>
        <name>frame_start</name>
        <briefdescription>
<para>The frame at which logging should start. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/state/StateLog.h" line="58" column="1" bodyfile="nTiled/include/state/StateLog.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structn_tiled_1_1state_1_1_log_1a90b05f23dafe41a92dcc71a02930234d" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int nTiled::state::Log::frame_end</definition>
        <argsstring></argsstring>
        <name>frame_end</name>
        <briefdescription>
<para>The frame at which logging should cease. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/state/StateLog.h" line="60" column="1" bodyfile="nTiled/include/state/StateLog.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structn_tiled_1_1state_1_1_log_1ae37cece2ffbf803445df740a5aacf554" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nTiled::state::Log::exit_after_done</definition>
        <argsstring></argsstring>
        <name>exit_after_done</name>
        <briefdescription>
<para>Whether the nTiled execution should exit at exit_frame. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/state/StateLog.h" line="63" column="1" bodyfile="nTiled/include/state/StateLog.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structn_tiled_1_1state_1_1_log_1a59b7306cc1c0a660e9a33ec4020284be" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int nTiled::state::Log::exit_frame</definition>
        <argsstring></argsstring>
        <name>exit_frame</name>
        <briefdescription>
<para>The frame at which the nTiled execution should exit if this.exit_after_done. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/state/StateLog.h" line="67" column="1" bodyfile="nTiled/include/state/StateLog.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structn_tiled_1_1state_1_1_log_1a13b9a687e2cc8ecd480dccca3db3cf67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nTiled::state::Log::Log</definition>
        <argsstring>(bool is_logging_data, std::string path, unsigned int frame_start, unsigned int frame_end, bool exit_after_done, unsigned int exit_frame)</argsstring>
        <name>Log</name>
        <param>
          <type>bool</type>
          <declname>is_logging_data</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>frame_start</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>frame_end</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>exit_after_done</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>exit_frame</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="structn_tiled_1_1state_1_1_log" kindref="compound">Log</ref> object with the provided parameters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_logging_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether this run of nTiled is logging data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to where the logged data should be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_start</parametername>
</parameternamelist>
<parameterdescription>
<para>The frame at which logging should start </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_end</parametername>
</parameternamelist>
<parameterdescription>
<para>The frame at which logging should cease </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exit_after_done</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether nTiled should exit after logging data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exit_frame</parametername>
</parameternamelist>
<parameterdescription>
<para>The frame at which nTiled should exit if exit_after_done </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/state/StateLog.h" line="30" column="1" bodyfile="nTiled/src/state/StateLog.cpp" bodystart="7" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="structn_tiled_1_1state_1_1_log_1a26e0dd4f22fe87be20f17dc1d473b6df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nTiled::state::Log::Log</definition>
        <argsstring>(std::string path, unsigned int frame_start, unsigned int frame_end)</argsstring>
        <name>Log</name>
        <param>
          <type>std::string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>frame_start</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>frame_end</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="structn_tiled_1_1state_1_1_log" kindref="compound">Log</ref> object which will log data from start to end does not exit after completing logging. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to where the logged data should be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_start</parametername>
</parameternamelist>
<parameterdescription>
<para>The frame at which logging should start </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_end</parametername>
</parameternamelist>
<parameterdescription>
<para>The frame at which logging should cease </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/state/StateLog.h" line="44" column="1" bodyfile="nTiled/src/state/StateLog.cpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="structn_tiled_1_1state_1_1_log_1a88e1399295084b29d54c4b77531012e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nTiled::state::Log::Log</definition>
        <argsstring>()</argsstring>
        <name>Log</name>
        <briefdescription>
<para>Construct a new <ref refid="structn_tiled_1_1state_1_1_log" kindref="compound">Log</ref> object which instructs nTiled not to log data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/state/StateLog.h" line="50" column="1" bodyfile="nTiled/src/state/StateLog.cpp" bodystart="26" bodyend="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="structn_tiled_1_1state_1_1_log" kindref="compound">Log</ref> holds all data related to logging which is passed on to the relevant logging components. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="nTiled/include/state/StateLog.h" line="19" column="1" bodyfile="nTiled/include/state/StateLog.h" bodystart="19" bodyend="68"/>
    <listofallmembers>
      <member refid="structn_tiled_1_1state_1_1_log_1ae37cece2ffbf803445df740a5aacf554" prot="public" virt="non-virtual"><scope>nTiled::state::Log</scope><name>exit_after_done</name></member>
      <member refid="structn_tiled_1_1state_1_1_log_1a59b7306cc1c0a660e9a33ec4020284be" prot="public" virt="non-virtual"><scope>nTiled::state::Log</scope><name>exit_frame</name></member>
      <member refid="structn_tiled_1_1state_1_1_log_1a90b05f23dafe41a92dcc71a02930234d" prot="public" virt="non-virtual"><scope>nTiled::state::Log</scope><name>frame_end</name></member>
      <member refid="structn_tiled_1_1state_1_1_log_1aea82822e28a23e831daab8a4eeab5015" prot="public" virt="non-virtual"><scope>nTiled::state::Log</scope><name>frame_start</name></member>
      <member refid="structn_tiled_1_1state_1_1_log_1a63e4b06527fe24f2f74a73b1022b38c1" prot="public" virt="non-virtual"><scope>nTiled::state::Log</scope><name>is_logging_data</name></member>
      <member refid="structn_tiled_1_1state_1_1_log_1a13b9a687e2cc8ecd480dccca3db3cf67" prot="public" virt="non-virtual"><scope>nTiled::state::Log</scope><name>Log</name></member>
      <member refid="structn_tiled_1_1state_1_1_log_1a26e0dd4f22fe87be20f17dc1d473b6df" prot="public" virt="non-virtual"><scope>nTiled::state::Log</scope><name>Log</name></member>
      <member refid="structn_tiled_1_1state_1_1_log_1a88e1399295084b29d54c4b77531012e6" prot="public" virt="non-virtual"><scope>nTiled::state::Log</scope><name>Log</name></member>
      <member refid="structn_tiled_1_1state_1_1_log_1a7a21a5c3d7bfc73cf84b8046ce1df047" prot="public" virt="non-virtual"><scope>nTiled::state::Log</scope><name>path</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
