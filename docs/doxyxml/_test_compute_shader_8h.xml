<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_test_compute_shader_8h" kind="file" language="C++">
    <compoundname>TestComputeShader.h</compoundname>
    <includes local="no">glad\glad.h</includes>
    <includes refid="_compute_shader_8h" local="yes">pipeline\light-management\clustered\compute-client\ComputeShader.h</includes>
    <includedby refid="_test_compute_shader_8cpp" local="yes">nTiled/src/pipeline/light-management/clustered/compute-client/TestComputeShader.cpp</includedby>
    <incdepgraph>
      <node id="1208">
        <label>nTiled/include/pipeline/light-management/clustered/compute-client/TestComputeShader.h</label>
        <link refid="_test_compute_shader_8h"/>
        <childnode refid="1209" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
      </node>
      <node id="1210">
        <label>pipeline\light-management\clustered\compute-client\ComputeShader.h</label>
        <link refid="_compute_shader_8h"/>
      </node>
      <node id="1209">
        <label>glad\glad.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classn_tiled_1_1pipeline_1_1clustered_1_1_test_compute_shader" prot="public">nTiled::pipeline::clustered::TestComputeShader</innerclass>
    <innernamespace refid="namespacen_tiled">nTiled</innernamespace>
    <innernamespace refid="namespacen_tiled_1_1pipeline">nTiled::pipeline</innernamespace>
    <innernamespace refid="namespacen_tiled_1_1pipeline_1_1clustered">nTiled::pipeline::clustered</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glad\glad.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_compute_shader_8h" kindref="compound">pipeline\light-management\clustered\compute-client\ComputeShader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacen_tiled" kindref="compound">nTiled</ref><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pipeline<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">clustered<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="classn_tiled_1_1pipeline_1_1clustered_1_1_test_compute_shader" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classn_tiled_1_1pipeline_1_1clustered_1_1_test_compute_shader" kindref="compound">TestComputeShader</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classn_tiled_1_1pipeline_1_1clustered_1_1_compute_shader" kindref="compound">ComputeShader</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><ref refid="classn_tiled_1_1pipeline_1_1clustered_1_1_test_compute_shader" kindref="compound">TestComputeShader</ref>();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classn_tiled_1_1pipeline_1_1clustered_1_1_test_compute_shader_1a3e499192a276a706b1aa6e0348bbf2eb" kindref="member">execute</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loadComputeShaders();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createFBO();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>GLuint<sp/>compute_shader;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>GLuint<sp/>p_fbo;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>GLuint<sp/>p_k_tex;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="nTiled/include/pipeline/light-management/clustered/compute-client/TestComputeShader.h"/>
  </compounddef>
</doxygen>
