<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="classn_tiled_1_1pipeline_1_1_deferred_shader" kind="class" language="C++" prot="public">
    <compoundname>nTiled::pipeline::DeferredShader</compoundname>
    <derivedcompoundref refid="classn_tiled_1_1pipeline_1_1_deferred_attenuated_shader" prot="public" virt="non-virtual">nTiled::pipeline::DeferredAttenuatedShader</derivedcompoundref>
    <derivedcompoundref refid="classn_tiled_1_1pipeline_1_1_deferred_clustered_shader" prot="public" virt="non-virtual">nTiled::pipeline::DeferredClusteredShader</derivedcompoundref>
    <derivedcompoundref refid="classn_tiled_1_1pipeline_1_1_deferred_tiled_shader" prot="public" virt="non-virtual">nTiled::pipeline::DeferredTiledShader</derivedcompoundref>
    <includes refid="_deferred_shader_8h" local="no">DeferredShader.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1a6974dbe74b09ff97ca94638bfe9f3883" prot="protected" static="no" mutable="no">
        <type>const <ref refid="_deferred_shader_id_8h_1a225c1f7d638c4978ae7c69c9a3de8cf3" kindref="member">DeferredShaderId</ref></type>
        <definition>const DeferredShaderId nTiled::pipeline::DeferredShader::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
<para>DeferredShaderId of this <ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="183" column="1" bodyfile="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1ae6e7007e01ccc3ab1c015ec726d92ebf" prot="protected" static="no" mutable="no">
        <type><ref refid="classn_tiled_1_1pipeline_1_1_g_buffer" kindref="compound">GBuffer</ref></type>
        <definition>GBuffer nTiled::pipeline::DeferredShader::gBuffer</definition>
        <argsstring></argsstring>
        <name>gBuffer</name>
        <briefdescription>
<para><ref refid="classn_tiled_1_1pipeline_1_1_g_buffer" kindref="compound">GBuffer</ref> of this <ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="186" column="1" bodyfile="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1ab88875b524d735162b7042c9060b4649" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classn_tiled_1_1world_1_1_world" kindref="compound">world::World</ref> &amp;</type>
        <definition>const world::World&amp; nTiled::pipeline::DeferredShader::world</definition>
        <argsstring></argsstring>
        <name>world</name>
        <briefdescription>
<para>The world this shader observes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="189" column="1" bodyfile="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1aad9da90249705d4bf45475ed9315f150" prot="protected" static="no" mutable="no">
        <type>const <ref refid="structn_tiled_1_1state_1_1_view" kindref="compound">state::View</ref> &amp;</type>
        <definition>const state::View&amp; nTiled::pipeline::DeferredShader::view</definition>
        <argsstring></argsstring>
        <name>view</name>
        <briefdescription>
<para>The view this shader uses. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="191" column="1" bodyfile="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1a3bdd1bccf82485785299662dae10eb3c" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structn_tiled_1_1pipeline_1_1_pipeline_object" kindref="compound">PipelineObject</ref> * &gt;</type>
        <definition>std::vector&lt;PipelineObject*&gt; nTiled::pipeline::DeferredShader::ps_obj</definition>
        <argsstring></argsstring>
        <name>ps_obj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector containing pointers to all PipelineObjects of this <ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="197" column="1" bodyfile="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1ade1d12ad4fd20fa3fd38d87a3519eee2" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structn_tiled_1_1pipeline_1_1_pipeline_light" kindref="compound">PipelineLight</ref> &gt;</type>
        <definition>std::vector&lt;PipelineLight&gt; nTiled::pipeline::DeferredShader::lights</definition>
        <argsstring></argsstring>
        <name>lights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector containing all PipelineLights of this <ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="200" column="1" bodyfile="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1adc50a57b01676adb2b6df0b184dc8e15" prot="protected" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint nTiled::pipeline::DeferredShader::geometry_pass_sp</definition>
        <argsstring></argsstring>
        <name>geometry_pass_sp</name>
        <briefdescription>
<para>GLuint pointer to the geometry pass ShaderProgam. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="205" column="1" bodyfile="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1a153e230ddb366f0e9425a4af84a95002" prot="protected" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint nTiled::pipeline::DeferredShader::light_pass_sp</definition>
        <argsstring></argsstring>
        <name>light_pass_sp</name>
        <briefdescription>
<para>GLuint pointer to the light pass ShaderProgram. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="207" column="1" bodyfile="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1ac71a63f32438e283bddbbeb7b7e2a929" prot="protected" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint nTiled::pipeline::DeferredShader::light_ubo</definition>
        <argsstring></argsstring>
        <name>light_ubo</name>
        <briefdescription>
<para>GLuint pointer to the Uniform Buffer Object holding the internal light data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="212" column="1" bodyfile="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1ab0e7169d233c6fc4d96de424c90707e3" prot="protected" static="no" mutable="no">
        <type><ref refid="structn_tiled_1_1pipeline_1_1_pipeline_object" kindref="compound">PipelineObject</ref> *</type>
        <definition>PipelineObject* nTiled::pipeline::DeferredShader::fullscreen_quad</definition>
        <argsstring></argsstring>
        <name>fullscreen_quad</name>
        <briefdescription>
<para><ref refid="structn_tiled_1_1pipeline_1_1_pipeline_object" kindref="compound">PipelineObject</ref> of the fullscreen quad used in the Light Pass. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="215" column="1" bodyfile="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1a06144b56505f3daad43056f084d3d77c" prot="protected" static="no" mutable="no">
        <type>GLint</type>
        <definition>GLint nTiled::pipeline::DeferredShader::p_output_buffer</definition>
        <argsstring></argsstring>
        <name>p_output_buffer</name>
        <briefdescription>
<para>output buffer that should be restored upon changing the framebuffer, and to which the final result should be written </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="220" column="1" bodyfile="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1a33a22067d70757dd5e01160bb0f40904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nTiled::pipeline::DeferredShader::DeferredShader</definition>
        <argsstring>(DeferredShaderId shader_id, const std::string &amp;path_geometry_pass_vertex_shader, const std::string &amp;path_geometry_pass_fragment_shader, const std::string &amp;path_light_pass_vertex_shader, const std::string &amp;path_light_pass_fragment_shader, const world::World &amp;world, const state::View &amp;view, GLint p_output_buffer)</argsstring>
        <name>DeferredShader</name>
        <param>
          <type><ref refid="_deferred_shader_id_8h_1a225c1f7d638c4978ae7c69c9a3de8cf3" kindref="member">DeferredShaderId</ref></type>
          <declname>shader_id</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>path_geometry_pass_vertex_shader</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>path_geometry_pass_fragment_shader</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>path_light_pass_vertex_shader</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>path_light_pass_fragment_shader</declname>
        </param>
        <param>
          <type>const <ref refid="classn_tiled_1_1world_1_1_world" kindref="compound">world::World</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type>const <ref refid="structn_tiled_1_1state_1_1_view" kindref="compound">state::View</ref> &amp;</type>
          <declname>view</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>p_output_buffer</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref> with the specified parameters. </para>        </briefdescription>
        <detaileddescription>
<para>Construct a new <ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref> with the specified a DeferredShaderId and vertex and fragment shader paths to the geometry and light pass shaders.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shader_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The DeferredShaderId of this new <ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path_geometry_pass_vertex_shader</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the geometry pass vertex shader file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path_geometry_pass_fragment_shader</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the geometry pass fragment shader file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path_light_pass_vertex_shader</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the light pass vertex shader file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path_light_pass_fragment_shader</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the light pass fragment shader file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>world</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the world containing the objects and lights this <ref refid="classn_tiled_1_1pipeline_1_1_shader" kindref="compound">Shader</ref> observes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the View and Camera this shader uses to shade. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_output_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>openGL pointer to the output buffer to which this <ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref> should render.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref> of DeferredShaderId with the given shader files paths. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="61" column="1" bodyfile="nTiled/src/pipeline/deferred/shaders/DeferredShader.cpp" bodystart="22" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1a881eabd8fc91d6ab93be37c9df1f1383" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_deferred_shader_id_8h_1a225c1f7d638c4978ae7c69c9a3de8cf3" kindref="member">DeferredShaderId</ref></type>
        <definition>DeferredShaderId nTiled::pipeline::DeferredShader::getId</definition>
        <argsstring>() const</argsstring>
        <name>getId</name>
        <briefdescription>
<para>Get the DeferredShaderId of this <ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The ForwardShaderId of this <ref refid="classn_tiled_1_1pipeline_1_1_forward_shader" kindref="compound">ForwardShader</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="77" column="1" bodyfile="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1a8854914116d74080c61e5212cacf1ccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nTiled::pipeline::DeferredShader::render</definition>
        <argsstring>()</argsstring>
        <name>render</name>
        <briefdescription>
<para>Render all objects of this <ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="84" column="1" bodyfile="nTiled/src/pipeline/deferred/shaders/DeferredShader.cpp" bodystart="116" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1aa10c508364afb8b8a440fa244b2ea334" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void nTiled::pipeline::DeferredShader::setOutputBuffer</definition>
        <argsstring>(GLint p_output_buffer)</argsstring>
        <name>setOutputBuffer</name>
        <param>
          <type>GLint</type>
          <declname>p_output_buffer</declname>
        </param>
        <briefdescription>
<para>Set the output buffer of this <ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref> to p_output_buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_output_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the new output buffer of this shader </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="90" column="1" bodyfile="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" bodystart="90" bodyend="92"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1aaf145ca8dde05368db26e461d3cab100" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nTiled::pipeline::DeferredShader::loadShaders</definition>
        <argsstring>(const std::string &amp;path_geometry_vert_shader, const std::string &amp;path_geometry_frag_shader, const std::string &amp;path_light_vert_shader, const std::string &amp;path_light_frag_shader)</argsstring>
        <name>loadShaders</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path_geometry_vert_shader</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>path_geometry_frag_shader</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>path_light_vert_shader</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>path_light_frag_shader</declname>
        </param>
        <briefdescription>
<para>Load the ShaderFiles specified in with the paths during construction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path_geometry_pass_vertex_shader</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the geometry pass vertex shader file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path_geometry_pass_fragment_shader</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the geometry pass fragment shader file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path_light_pass_vertex_shader</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the light pass vertex shader file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path_light_pass_fragment_shader</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the light pass fragment shader file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="110" column="1" bodyfile="nTiled/src/pipeline/deferred/shaders/DeferredShader.cpp" bodystart="367" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1aa33b1ddf8af0970f2f9eda071fee6824" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nTiled::pipeline::DeferredShader::loadObjects</definition>
        <argsstring>()</argsstring>
        <name>loadObjects</name>
        <briefdescription>
<para>Load all objects in the world. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="117" column="1" bodyfile="nTiled/src/pipeline/deferred/shaders/DeferredShader.cpp" bodystart="138" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1a0ff9c1988a497c5b7715a7ce5193e8f6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nTiled::pipeline::DeferredShader::constructPipelineObject</definition>
        <argsstring>(const world::Object &amp;obj, GLuint vao, GLuint element_buffer)</argsstring>
        <name>constructPipelineObject</name>
        <param>
          <type>const <ref refid="structn_tiled_1_1world_1_1_object" kindref="compound">world::Object</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>vao</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>element_buffer</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="structn_tiled_1_1pipeline_1_1_pipeline_object" kindref="compound">PipelineObject</ref> from the specified Object and add to this shader. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the object of which a <ref refid="structn_tiled_1_1pipeline_1_1_pipeline_object" kindref="compound">PipelineObject</ref> should be constructed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vao</parametername>
</parameternamelist>
<parameterdescription>
<para>openGL pointer to Vertex Array Object (vao) of this new <ref refid="structn_tiled_1_1pipeline_1_1_pipeline_object" kindref="compound">PipelineObject</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>openGL pointer to the element buffer of this <ref refid="structn_tiled_1_1pipeline_1_1_pipeline_object" kindref="compound">PipelineObject</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="129" column="1" bodyfile="nTiled/src/pipeline/deferred/shaders/DeferredShader.cpp" bodystart="205" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1a921189e8dabb0963b2934a63f9a392b7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nTiled::pipeline::DeferredShader::loadLights</definition>
        <argsstring>()</argsstring>
        <name>loadLights</name>
        <briefdescription>
<para>Load all lights in the world. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="135" column="1" bodyfile="nTiled/src/pipeline/deferred/shaders/DeferredShader.cpp" bodystart="216" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1a6c14bcca74a34c711fefb72fc9d5c61f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nTiled::pipeline::DeferredShader::constructPipelineLight</definition>
        <argsstring>(const world::PointLight &amp;light)</argsstring>
        <name>constructPipelineLight</name>
        <param>
          <type>const <ref refid="structn_tiled_1_1world_1_1_point_light" kindref="compound">world::PointLight</ref> &amp;</type>
          <declname>light</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="structn_tiled_1_1pipeline_1_1_pipeline_light" kindref="compound">PipelineLight</ref> from the specified Light and add to this <ref refid="classn_tiled_1_1pipeline_1_1_shader" kindref="compound">Shader</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>light</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the PointLight of which a new <ref refid="structn_tiled_1_1pipeline_1_1_pipeline_light" kindref="compound">PipelineLight</ref> should be created. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="143" column="1" bodyfile="nTiled/src/pipeline/deferred/shaders/DeferredShader.cpp" bodystart="253" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1a6fe599e10fc4d339bd6ea4ef3ed1270d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nTiled::pipeline::DeferredShader::renderGeometryPass</definition>
        <argsstring>()</argsstring>
        <name>renderGeometryPass</name>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_deferred_attenuated_shader_1a13f9057b6e67146e45e32a503f6ede41">renderGeometryPass</reimplementedby>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_deferred_clustered_shader_1a175cfa35499cdd7cba69f7edc883f4ba">renderGeometryPass</reimplementedby>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_deferred_tiled_shader_1a4dedca2a4d8fd4a5e1968348840a714b">renderGeometryPass</reimplementedby>
        <briefdescription>
<para>Render the geometry (first) pass of this <ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Render all the attributes needed for the light (second) pass of this <ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref> into the <ref refid="classn_tiled_1_1pipeline_1_1_g_buffer" kindref="compound">GBuffer</ref> of this <ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="153" column="1" bodyfile="nTiled/src/pipeline/deferred/shaders/DeferredShader.cpp" bodystart="261" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1abe1425901ff2a6017df74659ee3b44dd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nTiled::pipeline::DeferredShader::renderGeometryPassObjects</definition>
        <argsstring>()</argsstring>
        <name>renderGeometryPassObjects</name>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_deferred_attenuated_shader_logged_1a45cacf4940addbf1321b478ee8948fe1">renderGeometryPassObjects</reimplementedby>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_deferred_tiled_shader_logged_1a87671c3b49c054e128c21e4417077e39">renderGeometryPassObjects</reimplementedby>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_deferred_clustered_shader_logged_1a0fba243638d0eac7408f5668dbcd4f67">renderGeometryPassObjects</reimplementedby>
        <briefdescription>
<para>Render all the objects for the Geometry pass of this <ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="158" column="1" bodyfile="nTiled/src/pipeline/deferred/shaders/DeferredShader.cpp" bodystart="265" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1afa72c4f04db147ab8df5ff7aefdcd3dc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nTiled::pipeline::DeferredShader::renderLightPass</definition>
        <argsstring>()</argsstring>
        <name>renderLightPass</name>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_deferred_attenuated_shader_1acf9c8e6a24e39b0df3b5e1f100637d99">renderLightPass</reimplementedby>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_deferred_clustered_shader_1a8228fdbf8129b98714fca42e4e0a5396">renderLightPass</reimplementedby>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_deferred_tiled_shader_1ae51ee5168725778d351febdb636bfa90">renderLightPass</reimplementedby>
        <briefdescription>
<para>Render the light (second) pass of this <ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Render a quad and use the <ref refid="classn_tiled_1_1pipeline_1_1_g_buffer" kindref="compound">GBuffer</ref> to obtain the attributes of the scene to render the frame. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="165" column="1" bodyfile="nTiled/src/pipeline/deferred/shaders/DeferredShader.cpp" bodystart="297" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1a5f2764094c367ceebc310a0fdf9d0953" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nTiled::pipeline::DeferredShader::renderLightPassObjects</definition>
        <argsstring>()</argsstring>
        <name>renderLightPassObjects</name>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_deferred_attenuated_shader_logged_1ae427f6b94c12460b711aba79f48aacee">renderLightPassObjects</reimplementedby>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_deferred_tiled_shader_logged_1a337d9632c101979db950843b523fafbf">renderLightPassObjects</reimplementedby>
        <reimplementedby refid="classn_tiled_1_1pipeline_1_1_deferred_clustered_shader_logged_1a8360d28e20f2a6c92f546207010ccf89">renderLightPassObjects</reimplementedby>
        <briefdescription>
<para>Render all objects for the Light pass of this <ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="170" column="1" bodyfile="nTiled/src/pipeline/deferred/shaders/DeferredShader.cpp" bodystart="301" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_deferred_shader_1a590bfa905a6036b89da91ee18fec39d7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nTiled::pipeline::DeferredShader::renderBuffers</definition>
        <argsstring>()</argsstring>
        <name>renderBuffers</name>
        <briefdescription>
<para>Render the different GBuffers to frame. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="174" column="1" bodyfile="nTiled/src/pipeline/deferred/shaders/DeferredShader.cpp" bodystart="327" bodyend="365"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classn_tiled_1_1pipeline_1_1_deferred_shader" kindref="compound">DeferredShader</ref> is responsible for rendering any objects assigned to it, with the specified openGL shader code utilising a deferred pipeline. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="247">
        <label>nTiled::pipeline::DeferredShader</label>
        <link refid="classn_tiled_1_1pipeline_1_1_deferred_shader"/>
      </node>
      <node id="248">
        <label>nTiled::pipeline::DeferredAttenuatedShader</label>
        <link refid="classn_tiled_1_1pipeline_1_1_deferred_attenuated_shader"/>
        <childnode refid="247" relation="public-inheritance">
        </childnode>
      </node>
      <node id="253">
        <label>nTiled::pipeline::DeferredTiledShaderLogged</label>
        <link refid="classn_tiled_1_1pipeline_1_1_deferred_tiled_shader_logged"/>
        <childnode refid="252" relation="public-inheritance">
        </childnode>
      </node>
      <node id="252">
        <label>nTiled::pipeline::DeferredTiledShader</label>
        <link refid="classn_tiled_1_1pipeline_1_1_deferred_tiled_shader"/>
        <childnode refid="247" relation="public-inheritance">
        </childnode>
      </node>
      <node id="250">
        <label>nTiled::pipeline::DeferredClusteredShader</label>
        <link refid="classn_tiled_1_1pipeline_1_1_deferred_clustered_shader"/>
        <childnode refid="247" relation="public-inheritance">
        </childnode>
      </node>
      <node id="251">
        <label>nTiled::pipeline::DeferredClusteredShaderLogged</label>
        <link refid="classn_tiled_1_1pipeline_1_1_deferred_clustered_shader_logged"/>
        <childnode refid="250" relation="public-inheritance">
        </childnode>
      </node>
      <node id="249">
        <label>nTiled::pipeline::DeferredAttenuatedShaderLogged</label>
        <link refid="classn_tiled_1_1pipeline_1_1_deferred_attenuated_shader_logged"/>
        <childnode refid="248" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="262">
        <label>nTiled::state::ViewOutput</label>
        <link refid="structn_tiled_1_1state_1_1_view_output"/>
      </node>
      <node id="254">
        <label>nTiled::pipeline::DeferredShader</label>
        <link refid="classn_tiled_1_1pipeline_1_1_deferred_shader"/>
        <childnode refid="255" relation="usage">
          <edgelabel>world</edgelabel>
        </childnode>
        <childnode refid="256" relation="usage">
          <edgelabel>gBuffer</edgelabel>
        </childnode>
        <childnode refid="257" relation="usage">
          <edgelabel>view</edgelabel>
        </childnode>
        <childnode refid="263" relation="usage">
          <edgelabel>fullscreen_quad</edgelabel>
        </childnode>
      </node>
      <node id="263">
        <label>nTiled::pipeline::PipelineObject</label>
        <link refid="structn_tiled_1_1pipeline_1_1_pipeline_object"/>
      </node>
      <node id="258">
        <label>nTiled::camera::CameraControl</label>
        <link refid="classn_tiled_1_1camera_1_1_camera_control"/>
      </node>
      <node id="259">
        <label>nTiled::camera::Camera</label>
        <link refid="classn_tiled_1_1camera_1_1_camera"/>
        <childnode refid="260" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="258" relation="usage">
          <edgelabel>control</edgelabel>
        </childnode>
        <childnode refid="261" relation="usage">
          <edgelabel>construction_data</edgelabel>
        </childnode>
      </node>
      <node id="260">
        <label>nTiled::camera::CameraData</label>
        <link refid="structn_tiled_1_1camera_1_1_camera_data"/>
      </node>
      <node id="257">
        <label>nTiled::state::View</label>
        <link refid="structn_tiled_1_1state_1_1_view"/>
        <childnode refid="258" relation="usage">
          <edgelabel>camera_control</edgelabel>
        </childnode>
        <childnode refid="259" relation="usage">
          <edgelabel>camera</edgelabel>
        </childnode>
        <childnode refid="262" relation="usage">
          <edgelabel>output</edgelabel>
        </childnode>
      </node>
      <node id="255">
        <label>nTiled::world::World</label>
        <link refid="classn_tiled_1_1world_1_1_world"/>
      </node>
      <node id="261">
        <label>nTiled::camera::CameraConstructionData</label>
        <link refid="structn_tiled_1_1camera_1_1_camera_construction_data"/>
      </node>
      <node id="256">
        <label>nTiled::pipeline::GBuffer</label>
        <link refid="classn_tiled_1_1pipeline_1_1_g_buffer"/>
      </node>
    </collaborationgraph>
    <location file="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" line="32" column="1" bodyfile="nTiled/include/pipeline/deferred/shaders/DeferredShader.h" bodystart="32" bodyend="221"/>
    <listofallmembers>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1a6c14bcca74a34c711fefb72fc9d5c61f" prot="protected" virt="virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>constructPipelineLight</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1a0ff9c1988a497c5b7715a7ce5193e8f6" prot="protected" virt="virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>constructPipelineObject</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1a33a22067d70757dd5e01160bb0f40904" prot="public" virt="non-virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>DeferredShader</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1ab0e7169d233c6fc4d96de424c90707e3" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>fullscreen_quad</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1ae6e7007e01ccc3ab1c015ec726d92ebf" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>gBuffer</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1adc50a57b01676adb2b6df0b184dc8e15" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>geometry_pass_sp</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1a881eabd8fc91d6ab93be37c9df1f1383" prot="public" virt="non-virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>getId</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1a6974dbe74b09ff97ca94638bfe9f3883" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>id</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1a153e230ddb366f0e9425a4af84a95002" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>light_pass_sp</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1ac71a63f32438e283bddbbeb7b7e2a929" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>light_ubo</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1ade1d12ad4fd20fa3fd38d87a3519eee2" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>lights</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1a921189e8dabb0963b2934a63f9a392b7" prot="protected" virt="virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>loadLights</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1aa33b1ddf8af0970f2f9eda071fee6824" prot="protected" virt="virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>loadObjects</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1aaf145ca8dde05368db26e461d3cab100" prot="protected" virt="virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>loadShaders</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1a06144b56505f3daad43056f084d3d77c" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>p_output_buffer</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1a3bdd1bccf82485785299662dae10eb3c" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>ps_obj</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1a8854914116d74080c61e5212cacf1ccb" prot="public" virt="virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>render</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1a590bfa905a6036b89da91ee18fec39d7" prot="protected" virt="virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>renderBuffers</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1a6fe599e10fc4d339bd6ea4ef3ed1270d" prot="protected" virt="virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>renderGeometryPass</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1abe1425901ff2a6017df74659ee3b44dd" prot="protected" virt="virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>renderGeometryPassObjects</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1afa72c4f04db147ab8df5ff7aefdcd3dc" prot="protected" virt="virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>renderLightPass</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1a5f2764094c367ceebc310a0fdf9d0953" prot="protected" virt="virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>renderLightPassObjects</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1aa10c508364afb8b8a440fa244b2ea334" prot="public" virt="virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>setOutputBuffer</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1aad9da90249705d4bf45475ed9315f150" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>view</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_deferred_shader_1ab88875b524d735162b7042c9060b4649" prot="protected" virt="non-virtual"><scope>nTiled::pipeline::DeferredShader</scope><name>world</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
