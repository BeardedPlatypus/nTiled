<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_light_parser_8cpp" kind="file" language="C++">
    <compoundname>LightParser.cpp</compoundname>
    <includes refid="_state_8h" local="yes">state\State.h</includes>
    <includes local="no">fstream</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">rapidjson\document.h</includes>
    <includes local="no">glm/gtc/matrix_transform.hpp</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="3285">
        <label>pipeline\ShaderKey.h</label>
        <link refid="_shader_key_8h"/>
        <childnode refid="3264" relation="include">
        </childnode>
        <childnode refid="3274" relation="include">
        </childnode>
        <childnode refid="3275" relation="include">
        </childnode>
        <childnode refid="3277" relation="include">
        </childnode>
      </node>
      <node id="3275">
        <label>pipeline\deferred\shaders\DeferredShaderId.h</label>
        <link refid="_deferred_shader_id_8h"/>
      </node>
      <node id="3262">
        <label>nTiled/src/state/LightParser.cpp</label>
        <link refid="_light_parser_8cpp"/>
        <childnode refid="3263" relation="include">
        </childnode>
        <childnode refid="3288" relation="include">
        </childnode>
        <childnode refid="3264" relation="include">
        </childnode>
        <childnode refid="3270" relation="include">
        </childnode>
        <childnode refid="3289" relation="include">
        </childnode>
        <childnode refid="3290" relation="include">
        </childnode>
        <childnode refid="3291" relation="include">
        </childnode>
      </node>
      <node id="3281">
        <label>state\StateLog.h</label>
        <link refid="_state_log_8h"/>
        <childnode refid="3264" relation="include">
        </childnode>
      </node>
      <node id="3272">
        <label>camera\CameraConstructionData.h</label>
        <link refid="_camera_construction_data_8h"/>
        <childnode refid="3267" relation="include">
        </childnode>
      </node>
      <node id="3286">
        <label>world\PointLight.h</label>
        <link refid="_point_light_8h"/>
        <childnode refid="3267" relation="include">
        </childnode>
        <childnode refid="3283" relation="include">
        </childnode>
      </node>
      <node id="3280">
        <label>glad\glad.h</label>
      </node>
      <node id="3266">
        <label>camera\Camera.h</label>
        <link refid="_camera_8h"/>
        <childnode refid="3267" relation="include">
        </childnode>
        <childnode refid="3268" relation="include">
        </childnode>
        <childnode refid="3271" relation="include">
        </childnode>
        <childnode refid="3272" relation="include">
        </childnode>
      </node>
      <node id="3264">
        <label>string</label>
      </node>
      <node id="3267">
        <label>glm\glm.hpp</label>
      </node>
      <node id="3279">
        <label>map</label>
      </node>
      <node id="3289">
        <label>rapidjson\document.h</label>
      </node>
      <node id="3277">
        <label>pipeline\PipelineType.h</label>
        <link refid="_pipeline_type_8h"/>
      </node>
      <node id="3265">
        <label>state\StateView.h</label>
        <link refid="_state_view_8h"/>
        <childnode refid="3266" relation="include">
        </childnode>
      </node>
      <node id="3288">
        <label>fstream</label>
      </node>
      <node id="3268">
        <label>camera\CameraControl.h</label>
        <link refid="_camera_control_8h"/>
        <childnode refid="3269" relation="include">
        </childnode>
        <childnode refid="3270" relation="include">
        </childnode>
        <childnode refid="3267" relation="include">
        </childnode>
        <childnode refid="3271" relation="include">
        </childnode>
      </node>
      <node id="3278">
        <label>state\StateTexture.h</label>
        <link refid="_state_texture_8h"/>
        <childnode refid="3264" relation="include">
        </childnode>
        <childnode refid="3279" relation="include">
        </childnode>
        <childnode refid="3280" relation="include">
        </childnode>
      </node>
      <node id="3282">
        <label>world\World.h</label>
        <link refid="_world_8h"/>
        <childnode refid="3264" relation="include">
        </childnode>
        <childnode refid="3283" relation="include">
        </childnode>
        <childnode refid="3286" relation="include">
        </childnode>
      </node>
      <node id="3274">
        <label>pipeline\forward\shaders\ForwardShaderId.h</label>
        <link refid="_forward_shader_id_8h"/>
      </node>
      <node id="3270">
        <label>vector</label>
      </node>
      <node id="3273">
        <label>state\StateShading.h</label>
        <link refid="_state_shading_8h"/>
        <childnode refid="3270" relation="include">
        </childnode>
        <childnode refid="3267" relation="include">
        </childnode>
        <childnode refid="3274" relation="include">
        </childnode>
        <childnode refid="3275" relation="include">
        </childnode>
        <childnode refid="3276" relation="include">
        </childnode>
        <childnode refid="3277" relation="include">
        </childnode>
      </node>
      <node id="3276">
        <label>pipeline\debug-view\shaders\DebugShaderId.h</label>
        <link refid="_debug_shader_id_8h"/>
      </node>
      <node id="3269">
        <label>imgui.h</label>
      </node>
      <node id="3291">
        <label>iostream</label>
      </node>
      <node id="3290">
        <label>glm/gtc/matrix_transform.hpp</label>
      </node>
      <node id="3271">
        <label>camera\CameraData.h</label>
        <link refid="_camera_data_8h"/>
        <childnode refid="3267" relation="include">
        </childnode>
      </node>
      <node id="3284">
        <label>world\Mesh.h</label>
        <link refid="_mesh_8h"/>
        <childnode refid="3270" relation="include">
        </childnode>
        <childnode refid="3267" relation="include">
        </childnode>
      </node>
      <node id="3287">
        <label>world\light-constructor\LightConstructor.h</label>
        <link refid="_light_constructor_8h"/>
        <childnode refid="3264" relation="include">
        </childnode>
        <childnode refid="3267" relation="include">
        </childnode>
        <childnode refid="3286" relation="include">
        </childnode>
      </node>
      <node id="3283">
        <label>world\Object.h</label>
        <link refid="_object_8h"/>
        <childnode refid="3279" relation="include">
        </childnode>
        <childnode refid="3284" relation="include">
        </childnode>
        <childnode refid="3285" relation="include">
        </childnode>
      </node>
      <node id="3263">
        <label>state\State.h</label>
        <link refid="_state_8h"/>
        <childnode refid="3264" relation="include">
        </childnode>
        <childnode refid="3265" relation="include">
        </childnode>
        <childnode refid="3273" relation="include">
        </childnode>
        <childnode refid="3278" relation="include">
        </childnode>
        <childnode refid="3281" relation="include">
        </childnode>
        <childnode refid="3282" relation="include">
        </childnode>
        <childnode refid="3287" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_light_parser_8cpp_1ad72dbcf6d0153db1b8d8a58001feed83" prot="public" static="no">
        <name>DEBUG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/src/state/LightParser.cpp" line="16" column="9" bodyfile="nTiled/src/state/LightParser.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_state_8h" kindref="compound">state\State.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>File<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Json<sp/>include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rapidjson\document.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glm/gtc/matrix_transform.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_state_8h_1af31c47a1c71e1be2231955c28e7c34ff" kindref="member">nTiled::state::parseLights</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classn_tiled_1_1world_1_1_light_constructor" kindref="compound">nTiled::world::LightConstructor</ref>&amp;<sp/>constructor)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>path<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loading<sp/>...<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>ifs(path);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>std::string<sp/>lights_file((std::istreambuf_iterator&lt;char&gt;(ifs)),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>(std::istreambuf_iterator&lt;char&gt;()));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>json</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DONE&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parsing<sp/>...<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>rapidjson::Document<sp/>lights;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>lights.Parse(lights_file.c_str());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DONE&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constructing<sp/>lights<sp/>...<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lights_array_json<sp/>=<sp/>lights[</highlight><highlight class="stringliteral">&quot;lights&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(rapidjson::Value::ConstValueIterator<sp/>itr<sp/>=<sp/>lights_array_json.Begin();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itr<sp/>!=<sp/>lights_array_json.End();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>++itr)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>position_json<sp/>=<sp/>(*itr)[</highlight><highlight class="stringliteral">&quot;position&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::vec3<sp/>position<sp/>=<sp/>glm::vec3(position_json[</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">].GetFloat(),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position_json[</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">].GetFloat(),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position_json[</highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">].GetFloat());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>colour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>intensity_json<sp/>=<sp/>(*itr)[</highlight><highlight class="stringliteral">&quot;intensity&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::vec3<sp/>intensity<sp/>=<sp/>glm::vec3(intensity_json[</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">].GetFloat(),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intensity_json[</highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">].GetFloat(),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intensity_json[</highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">].GetFloat());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>radius</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius<sp/>=<sp/>(*itr)[</highlight><highlight class="stringliteral">&quot;radius&quot;</highlight><highlight class="normal">].GetFloat();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>constructor.<ref refid="classn_tiled_1_1world_1_1_light_constructor_1a0dfecd9beaef750d3457bf9fa35e384f" kindref="member">add</ref>(</highlight><highlight class="stringliteral">&quot;point_light&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec4(position,<sp/>1.0f),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intensity,<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radius,<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>constructed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DEBUG</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor">}</highlight></codeline>
    </programlisting>
    <location file="nTiled/src/state/LightParser.cpp"/>
  </compounddef>
</doxygen>
