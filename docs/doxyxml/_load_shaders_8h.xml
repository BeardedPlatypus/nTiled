<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_load_shaders_8h" kind="file" language="C++">
    <compoundname>LoadShaders.h</compoundname>
    <includes local="no">glad\glad.h</includes>
    <includes local="no">string</includes>
    <includedby refid="_debug_pipeline_8cpp" local="yes">nTiled/src/pipeline/debug-view/DebugPipeline.cpp</includedby>
    <includedby refid="_debug_tile_display_shader_8cpp" local="yes">nTiled/src/pipeline/debug-view/shaders/DebugTileDisplayShader.cpp</includedby>
    <includedby refid="_deferred_shader_8cpp" local="yes">nTiled/src/pipeline/deferred/shaders/DeferredShader.cpp</includedby>
    <includedby refid="_forward_clustered_shader_8cpp" local="yes">nTiled/src/pipeline/forward/shaders/ForwardClusteredShader.cpp</includedby>
    <includedby refid="_forward_shader_8cpp" local="yes">nTiled/src/pipeline/forward/shaders/ForwardShader.cpp</includedby>
    <includedby refid="_key_compute_shader_8cpp" local="yes">nTiled/src/pipeline/light-management/clustered/compute-client/KeyComputeShader.cpp</includedby>
    <includedby refid="_key_sort_and_compact_shader_8cpp" local="yes">nTiled/src/pipeline/light-management/clustered/compute-client/KeySortAndCompactShader.cpp</includedby>
    <includedby refid="_test_compute_shader_8cpp" local="yes">nTiled/src/pipeline/light-management/clustered/compute-client/TestComputeShader.cpp</includedby>
    <includedby refid="_load_shaders_8cpp" local="yes">nTiled/src/pipeline/shader-util/LoadShaders.cpp</includedby>
    <includedby refid="_shader_8cpp" local="yes">nTiled/src/pipeline/Shader.cpp</includedby>
    <incdepgraph>
      <node id="1494">
        <label>glad\glad.h</label>
      </node>
      <node id="1495">
        <label>string</label>
      </node>
      <node id="1493">
        <label>nTiled/include/pipeline/shader-util/LoadShaders.h</label>
        <link refid="_load_shaders_8h"/>
        <childnode refid="1494" relation="include">
        </childnode>
        <childnode refid="1495" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacen_tiled">nTiled</innernamespace>
    <innernamespace refid="namespacen_tiled_1_1pipeline">nTiled::pipeline</innernamespace>
    <briefdescription>
<para><ref refid="_load_shaders_8h" kindref="compound">LoadShaders.h</ref> contains all function definitions related to loading and compiling openGL shaders. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="5"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glad\glad.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacen_tiled" kindref="compound">nTiled</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pipeline<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Shader<sp/>loading<sp/>and<sp/>compiling.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight><highlight class="normal">std::stringstream<sp/><ref refid="_load_shaders_8h_1a46b5c96a4423e860bec31ccdd0c64d26" kindref="member">readShader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">std::stringstream<sp/><ref refid="_load_shaders_8h_1aa56efbe7641f594b452bacd0b53d4230" kindref="member">readShaderWithLights</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_lights);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">GLuint<sp/><ref refid="_load_shaders_8h_1a70dceef54a874acb2db9c9e48ce564ff" kindref="member">compileShader</ref>(GLenum<sp/>shader_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>shader);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">GLuint<sp/><ref refid="_load_shaders_8h_1a6d86003dd1fbf838cd1d074ca63effe9" kindref="member">createProgram</ref>(GLuint<sp/>vertex_shader,<sp/>GLuint<sp/>fragment_shader);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">GLuint<sp/><ref refid="_load_shaders_8h_1a3a1a5d0d5a7c527187450ab176e007ca" kindref="member">loadAndCompileShader</ref>(GLenum<sp/>shader_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">GLuint<sp/><ref refid="_load_shaders_8h_1a0c678c5bfe500d868e071c2dfdd532ba" kindref="member">createVertexFragmentProgram</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>vertex_shader_path,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fragment_shader_path);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">GLuint<sp/><ref refid="_load_shaders_8h_1a4b17b26bdf988733995c2fab7263f49e" kindref="member">createComputeProgram</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>compute_shader);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>nTiled</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="nTiled/include/pipeline/shader-util/LoadShaders.h"/>
  </compounddef>
</doxygen>
