<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="classn_tiled_1_1pipeline_1_1_box_projector" kind="class" language="C++" prot="public">
    <compoundname>nTiled::pipeline::BoxProjector</compoundname>
    <basecompoundref refid="classn_tiled_1_1pipeline_1_1_light_projector" prot="public" virt="non-virtual">nTiled::pipeline::LightProjector</basecompoundref>
    <includes refid="_box_projector_8h" local="no">BoxProjector.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_box_projector_1a50116d7f619c22cad9a6fa1fe031ed27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nTiled::pipeline::BoxProjector::BoxProjector</definition>
        <argsstring>()</argsstring>
        <name>BoxProjector</name>
        <briefdescription>
<para>Construct a new <ref refid="classn_tiled_1_1pipeline_1_1_box_projector" kindref="compound">BoxProjector</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/tiled/BoxProjector.h" line="21" column="1" bodyfile="nTiled/src/pipeline/light-management/tiled/BoxProjector.cpp" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_box_projector_1a3bb4956ed8fc6b2d35a5a7f4459e1852" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool nTiled::pipeline::BoxProjector::computeProjection</definition>
        <argsstring>(const world::PointLight &amp;light, const camera::Camera &amp;camera, glm::uvec2 viewport, glm::uvec2 tilesize, glm::uvec4 &amp;projection) const</argsstring>
        <name>computeProjection</name>
        <reimplements refid="classn_tiled_1_1pipeline_1_1_light_projector_1acac91d06140060d5235812a1cf3b0440">computeProjection</reimplements>
        <param>
          <type>const <ref refid="structn_tiled_1_1world_1_1_point_light" kindref="compound">world::PointLight</ref> &amp;</type>
          <declname>light</declname>
        </param>
        <param>
          <type>const <ref refid="classn_tiled_1_1camera_1_1_camera" kindref="compound">camera::Camera</ref> &amp;</type>
          <declname>camera</declname>
        </param>
        <param>
          <type>glm::uvec2</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>glm::uvec2</type>
          <declname>tilesize</declname>
        </param>
        <param>
          <type>glm::uvec4 &amp;</type>
          <declname>projection</declname>
        </param>
        <briefdescription>
<para>Compute the projection of light in to the tiles. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>light</parametername>
</parameternamelist>
<parameterdescription>
<para>The PointLight that is projected onto the tiles. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>camera</parametername>
</parameternamelist>
<parameterdescription>
<para>The Camera used to project the light onto the grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>viewport</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the viewport in pixels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tilesize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of a single tile in pixels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>projection</parametername>
</parameternamelist>
<parameterdescription>
<para>The result of the projection in tile indices</para></parameterdescription>
</parameteritem>
</parameterlist>
True if a projection exists given the parameters. The result is then returned through the projection parameter. False if no projection exists. The projection parameter is untouched. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/tiled/BoxProjector.h" line="24" column="1" bodyfile="nTiled/src/pipeline/light-management/tiled/BoxProjector.cpp" bodystart="26" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_box_projector_1a36aede40cfb5b90c2f920474481790e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nTiled::pipeline::BoxProjector::computeNDCProjection</definition>
        <argsstring>(const world::PointLight &amp;light, const camera::Camera &amp;camera, glm::vec4 &amp;ndc_coordinates) const</argsstring>
        <name>computeNDCProjection</name>
        <param>
          <type>const <ref refid="structn_tiled_1_1world_1_1_point_light" kindref="compound">world::PointLight</ref> &amp;</type>
          <declname>light</declname>
        </param>
        <param>
          <type>const <ref refid="classn_tiled_1_1camera_1_1_camera" kindref="compound">camera::Camera</ref> &amp;</type>
          <declname>camera</declname>
        </param>
        <param>
          <type>glm::vec4 &amp;</type>
          <declname>ndc_coordinates</declname>
        </param>
        <briefdescription>
<para>Compute the Projection in Normalised Device Coordinates (NDC). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>light</parametername>
</parameternamelist>
<parameterdescription>
<para>The PointLight that is projected onto the tiles. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>camera</parametername>
</parameternamelist>
<parameterdescription>
<para>The Camera used to project the light onto the grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ndc_coordinates</parametername>
</parameternamelist>
<parameterdescription>
<para>the result of the projection in NDC</para></parameterdescription>
</parameteritem>
</parameterlist>
True if a projection exists given the parameters. The result is then returned through the ndc_coordinates. False if no projection exists. The ndc_projection parameter is untouched. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/tiled/BoxProjector.h" line="42" column="1" bodyfile="nTiled/src/pipeline/light-management/tiled/BoxProjector.cpp" bodystart="46" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classn_tiled_1_1pipeline_1_1_box_projector_1a917b0fe0b7c57f293eb72b7706408b4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nTiled::pipeline::BoxProjector::compute2dProjection</definition>
        <argsstring>(glm::vec2 pos_cameraspace, float cutoff_radius, glm::vec2 &amp;B_star, glm::vec2 &amp;T_star) const</argsstring>
        <name>compute2dProjection</name>
        <param>
          <type>glm::vec2</type>
          <declname>pos_cameraspace</declname>
        </param>
        <param>
          <type>float</type>
          <declname>cutoff_radius</declname>
        </param>
        <param>
          <type>glm::vec2 &amp;</type>
          <declname>B_star</declname>
        </param>
        <param>
          <type>glm::vec2 &amp;</type>
          <declname>T_star</declname>
        </param>
        <briefdescription>
<para>Compute a 2d projection of a circle onto screen space in a single dimension. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos_cameraspace</parametername>
</parameternamelist>
<parameterdescription>
<para>The position in camera space of the sphere </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cutoff_radius</parametername>
</parameternamelist>
<parameterdescription>
<para>The radius of the sphere. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>B_star</parametername>
</parameternamelist>
<parameterdescription>
<para>The left position of the 2d projection onto a single dimension </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_star</parametername>
</parameternamelist>
<parameterdescription>
<para>The right position of the 2d projection onta a single dimension </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/include/pipeline/light-management/tiled/BoxProjector.h" line="56" column="1" bodyfile="nTiled/src/pipeline/light-management/tiled/BoxProjector.cpp" bodystart="143" bodyend="167"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classn_tiled_1_1pipeline_1_1_box_projector" kindref="compound">BoxProjector</ref> is responsible for creating box projections of lights onto screen space coordinates. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="11">
        <label>nTiled::pipeline::LightProjector</label>
        <link refid="classn_tiled_1_1pipeline_1_1_light_projector"/>
      </node>
      <node id="10">
        <label>nTiled::pipeline::BoxProjector</label>
        <link refid="classn_tiled_1_1pipeline_1_1_box_projector"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="13">
        <label>nTiled::pipeline::LightProjector</label>
        <link refid="classn_tiled_1_1pipeline_1_1_light_projector"/>
      </node>
      <node id="12">
        <label>nTiled::pipeline::BoxProjector</label>
        <link refid="classn_tiled_1_1pipeline_1_1_box_projector"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="nTiled/include/pipeline/light-management/tiled/BoxProjector.h" line="18" column="1" bodyfile="nTiled/include/pipeline/light-management/tiled/BoxProjector.h" bodystart="18" bodyend="63"/>
    <listofallmembers>
      <member refid="classn_tiled_1_1pipeline_1_1_box_projector_1a50116d7f619c22cad9a6fa1fe031ed27" prot="public" virt="non-virtual"><scope>nTiled::pipeline::BoxProjector</scope><name>BoxProjector</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_box_projector_1a917b0fe0b7c57f293eb72b7706408b4c" prot="public" virt="non-virtual"><scope>nTiled::pipeline::BoxProjector</scope><name>compute2dProjection</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_box_projector_1a36aede40cfb5b90c2f920474481790e6" prot="public" virt="non-virtual"><scope>nTiled::pipeline::BoxProjector</scope><name>computeNDCProjection</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_box_projector_1a3bb4956ed8fc6b2d35a5a7f4459e1852" prot="public" virt="virtual"><scope>nTiled::pipeline::BoxProjector</scope><name>computeProjection</name></member>
      <member refid="classn_tiled_1_1pipeline_1_1_light_projector_1ac4a95a64742452ca5bb70f77c3c75659" prot="public" virt="virtual"><scope>nTiled::pipeline::BoxProjector</scope><name>~LightProjector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
