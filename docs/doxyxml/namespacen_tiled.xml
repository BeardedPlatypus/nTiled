<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="namespacen_tiled" kind="namespace" language="C++">
    <compoundname>nTiled</compoundname>
    <innerclass refid="classn_tiled_1_1_clock" prot="public">nTiled::Clock</innerclass>
    <innerclass refid="classn_tiled_1_1_controller" prot="public">nTiled::Controller</innerclass>
    <innerclass refid="classn_tiled_1_1_draw_method" prot="public">nTiled::DrawMethod</innerclass>
    <innerclass refid="classn_tiled_1_1_draw_to_memory" prot="public">nTiled::DrawToMemory</innerclass>
    <innerclass refid="classn_tiled_1_1_draw_to_view" prot="public">nTiled::DrawToView</innerclass>
    <innerclass refid="classn_tiled_1_1_exit_event" prot="public">nTiled::ExitEvent</innerclass>
    <innerclass refid="classn_tiled_1_1_export_logging_data_event" prot="public">nTiled::ExportLoggingDataEvent</innerclass>
    <innerclass refid="classn_tiled_1_1_frame_event" prot="public">nTiled::FrameEvent</innerclass>
    <innerclass refid="classn_tiled_1_1_frame_event_compare" prot="public">nTiled::FrameEventCompare</innerclass>
    <innerclass refid="classn_tiled_1_1_set_draw_method_event" prot="public">nTiled::SetDrawMethodEvent</innerclass>
    <innerclass refid="classn_tiled_1_1_toggle_logging_data_event" prot="public">nTiled::ToggleLoggingDataEvent</innerclass>
    <innernamespace refid="namespacen_tiled_1_1camera">nTiled::camera</innernamespace>
    <innernamespace refid="namespacen_tiled_1_1gui">nTiled::gui</innernamespace>
    <innernamespace refid="namespacen_tiled_1_1logged">nTiled::logged</innernamespace>
    <innernamespace refid="namespacen_tiled_1_1math">nTiled::math</innernamespace>
    <innernamespace refid="namespacen_tiled_1_1pipeline">nTiled::pipeline</innernamespace>
    <innernamespace refid="namespacen_tiled_1_1state">nTiled::state</innernamespace>
    <innernamespace refid="namespacen_tiled_1_1world">nTiled::world</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="_controller_8cpp_1a2fe94f73dad5ef3d1104250b1504b3ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nTiled::key_callback</definition>
        <argsstring>(GLFWwindow *window, int key, int scancode, int action, int mode)</argsstring>
        <name>key_callback</name>
        <param>
          <type>GLFWwindow *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scancode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nTiled/src/main/Controller.cpp" line="13" column="1" bodyfile="nTiled/src/main/Controller.cpp" bodystart="266" bodyend="273"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="nTiled/include/camera/Camera.h" line="18" column="1"/>
  </compounddef>
</doxygen>
