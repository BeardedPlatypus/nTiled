<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_deferred_clustered_shader_8cpp" kind="file" language="C++">
    <compoundname>DeferredClusteredShader.cpp</compoundname>
    <includes refid="_deferred_clustered_shader_8h" local="yes">pipeline\deferred\shaders\DeferredClusteredShader.h</includes>
    <includes local="no">glm/gtc/type_ptr.hpp</includes>
    <incdepgraph>
      <node id="2434">
        <label>pipeline\light-management\clustered\ClusteredLightManager.h</label>
        <link refid="_clustered_light_manager_8h"/>
        <childnode refid="2431" relation="include">
        </childnode>
        <childnode refid="2424" relation="include">
        </childnode>
        <childnode refid="2414" relation="include">
        </childnode>
        <childnode refid="2435" relation="include">
        </childnode>
        <childnode refid="2437" relation="include">
        </childnode>
        <childnode refid="2439" relation="include">
        </childnode>
        <childnode refid="2440" relation="include">
        </childnode>
      </node>
      <node id="2435">
        <label>pipeline\light-management\tiled\BoxProjector.h</label>
        <link refid="_box_projector_8h"/>
        <childnode refid="2436" relation="include">
        </childnode>
      </node>
      <node id="2420">
        <label>pipeline\ShaderKey.h</label>
        <link refid="_shader_key_8h"/>
        <childnode refid="2412" relation="include">
        </childnode>
        <childnode refid="2421" relation="include">
        </childnode>
        <childnode refid="2413" relation="include">
        </childnode>
        <childnode refid="2422" relation="include">
        </childnode>
      </node>
      <node id="2413">
        <label>pipeline\deferred\shaders\DeferredShaderId.h</label>
        <link refid="_deferred_shader_id_8h"/>
      </node>
      <node id="2437">
        <label>compute-client\KeyComputeShader.h</label>
        <link refid="_key_compute_shader_8h"/>
        <childnode refid="2431" relation="include">
        </childnode>
        <childnode refid="2419" relation="include">
        </childnode>
        <childnode refid="2438" relation="include">
        </childnode>
        <childnode refid="2424" relation="include">
        </childnode>
        <childnode refid="2430" relation="include">
        </childnode>
      </node>
      <node id="2429">
        <label>camera\CameraConstructionData.h</label>
        <link refid="_camera_construction_data_8h"/>
        <childnode refid="2419" relation="include">
        </childnode>
      </node>
      <node id="2423">
        <label>world\PointLight.h</label>
        <link refid="_point_light_8h"/>
        <childnode refid="2419" relation="include">
        </childnode>
        <childnode refid="2415" relation="include">
        </childnode>
      </node>
      <node id="2411">
        <label>DeferredShader.h</label>
        <link refid="_deferred_shader_8h"/>
        <childnode refid="2412" relation="include">
        </childnode>
        <childnode refid="2413" relation="include">
        </childnode>
        <childnode refid="2414" relation="include">
        </childnode>
        <childnode refid="2424" relation="include">
        </childnode>
        <childnode refid="2430" relation="include">
        </childnode>
        <childnode refid="2432" relation="include">
        </childnode>
        <childnode refid="2433" relation="include">
        </childnode>
      </node>
      <node id="2439">
        <label>compute-client\KeySortAndCompactShader.h</label>
        <link refid="_key_sort_and_compact_shader_8h"/>
        <childnode refid="2431" relation="include">
        </childnode>
        <childnode refid="2419" relation="include">
        </childnode>
        <childnode refid="2418" relation="include">
        </childnode>
        <childnode refid="2438" relation="include">
        </childnode>
        <childnode refid="2424" relation="include">
        </childnode>
      </node>
      <node id="2438">
        <label>pipeline\light-management\clustered\compute-client\ComputeShader.h</label>
        <link refid="_compute_shader_8h"/>
      </node>
      <node id="2431">
        <label>glad\glad.h</label>
      </node>
      <node id="2425">
        <label>camera\Camera.h</label>
        <link refid="_camera_8h"/>
        <childnode refid="2419" relation="include">
        </childnode>
        <childnode refid="2426" relation="include">
        </childnode>
        <childnode refid="2428" relation="include">
        </childnode>
        <childnode refid="2429" relation="include">
        </childnode>
      </node>
      <node id="2412">
        <label>string</label>
      </node>
      <node id="2419">
        <label>glm\glm.hpp</label>
      </node>
      <node id="2416">
        <label>map</label>
      </node>
      <node id="2436">
        <label>pipeline\light-management\tiled\LightProjector.h</label>
        <link refid="_light_projector_8h"/>
        <childnode refid="2418" relation="include">
        </childnode>
        <childnode refid="2423" relation="include">
        </childnode>
        <childnode refid="2425" relation="include">
        </childnode>
      </node>
      <node id="2422">
        <label>pipeline\PipelineType.h</label>
        <link refid="_pipeline_type_8h"/>
      </node>
      <node id="2424">
        <label>state\StateView.h</label>
        <link refid="_state_view_8h"/>
        <childnode refid="2425" relation="include">
        </childnode>
      </node>
      <node id="2426">
        <label>camera\CameraControl.h</label>
        <link refid="_camera_control_8h"/>
        <childnode refid="2427" relation="include">
        </childnode>
        <childnode refid="2418" relation="include">
        </childnode>
        <childnode refid="2419" relation="include">
        </childnode>
        <childnode refid="2428" relation="include">
        </childnode>
      </node>
      <node id="2414">
        <label>world\World.h</label>
        <link refid="_world_8h"/>
        <childnode refid="2412" relation="include">
        </childnode>
        <childnode refid="2415" relation="include">
        </childnode>
        <childnode refid="2423" relation="include">
        </childnode>
      </node>
      <node id="2433">
        <label>pipeline\deferred\GBuffer.h</label>
        <link refid="_g_buffer_8h"/>
        <childnode refid="2431" relation="include">
        </childnode>
      </node>
      <node id="2441">
        <label>glm/gtc/type_ptr.hpp</label>
      </node>
      <node id="2421">
        <label>pipeline\forward\shaders\ForwardShaderId.h</label>
        <link refid="_forward_shader_id_8h"/>
      </node>
      <node id="2418">
        <label>vector</label>
      </node>
      <node id="2409">
        <label>nTiled/src/pipeline/deferred/shaders/DeferredClusteredShader.cpp</label>
        <link refid="_deferred_clustered_shader_8cpp"/>
        <childnode refid="2410" relation="include">
        </childnode>
        <childnode refid="2441" relation="include">
        </childnode>
      </node>
      <node id="2427">
        <label>imgui.h</label>
      </node>
      <node id="2430">
        <label>pipeline\PipelineObject.h</label>
        <link refid="_pipeline_object_8h"/>
        <childnode refid="2431" relation="include">
        </childnode>
        <childnode refid="2419" relation="include">
        </childnode>
      </node>
      <node id="2432">
        <label>pipeline\PipelineLight.h</label>
        <link refid="_pipeline_light_8h"/>
        <childnode refid="2431" relation="include">
        </childnode>
        <childnode refid="2419" relation="include">
        </childnode>
      </node>
      <node id="2410">
        <label>pipeline\deferred\shaders\DeferredClusteredShader.h</label>
        <link refid="_deferred_clustered_shader_8h"/>
        <childnode refid="2411" relation="include">
        </childnode>
        <childnode refid="2434" relation="include">
        </childnode>
      </node>
      <node id="2440">
        <label>LightClustering.h</label>
        <link refid="_light_clustering_8h"/>
        <childnode refid="2431" relation="include">
        </childnode>
        <childnode refid="2419" relation="include">
        </childnode>
        <childnode refid="2418" relation="include">
        </childnode>
      </node>
      <node id="2428">
        <label>camera\CameraData.h</label>
        <link refid="_camera_data_8h"/>
        <childnode refid="2419" relation="include">
        </childnode>
      </node>
      <node id="2417">
        <label>world\Mesh.h</label>
        <link refid="_mesh_8h"/>
        <childnode refid="2418" relation="include">
        </childnode>
        <childnode refid="2419" relation="include">
        </childnode>
      </node>
      <node id="2415">
        <label>world\Object.h</label>
        <link refid="_object_8h"/>
        <childnode refid="2416" relation="include">
        </childnode>
        <childnode refid="2417" relation="include">
        </childnode>
        <childnode refid="2420" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacen_tiled">nTiled</innernamespace>
    <innernamespace refid="namespacen_tiled_1_1pipeline">nTiled::pipeline</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_deferred_clustered_shader_8h" kindref="compound">pipeline\deferred\shaders\DeferredClusteredShader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glm/gtc/type_ptr.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacen_tiled" kindref="compound">nTiled</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pipeline<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="classn_tiled_1_1pipeline_1_1_deferred_clustered_shader_1a80dc53ea304db44152b58915d99504ac" kindref="member">DeferredClusteredShader::DeferredClusteredShader</ref>(</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>DeferredShaderId<sp/>shader_id,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path_geometry_pass_vertex_shader,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path_geometry_pass_fragment_shader,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path_light_pass_vertex_shader,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path_light_pass_fragment_shader,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>world::World&amp;<sp/>world,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>state::View&amp;<sp/>view,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>p_output_buffer,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::uvec2<sp/>tile_size,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ClusteredLightManagerBuilder&amp;<sp/>light_manager_builder)<sp/>:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>DeferredShader(shader_id,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path_geometry_pass_vertex_shader,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path_geometry_pass_fragment_shader,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path_light_pass_vertex_shader,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path_light_pass_fragment_shader,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>world,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_output_buffer),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>p_clustered_light_manager(</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>light_manager_builder.constructNewClusteredLightManager(</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>view,<sp/>world,<sp/>tile_size,<sp/>this-&gt;gBuffer.getPointerDepthTexture()))<sp/>{<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>glUseProgram(this-&gt;light_pass_sp);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>uniform<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>GLuint<sp/>n_tiles_x<sp/>=<sp/>this-&gt;view.viewport.x<sp/>/<sp/>tile_size.x;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tile_size.x<sp/>*<sp/>n_tiles_x<sp/>&lt;<sp/>this-&gt;view.viewport.x)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>n_tiles_x++;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>GLint<sp/>p_tile_size<sp/>=<sp/>glGetUniformLocation(this-&gt;light_pass_sp,<sp/></highlight><highlight class="stringliteral">&quot;tile_size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>GLint<sp/>p_n_tiles_x<sp/>=<sp/>glGetUniformLocation(this-&gt;light_pass_sp,<sp/></highlight><highlight class="stringliteral">&quot;n_tiles_x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>glUniform2uiv(p_tile_size,<sp/>1,<sp/>glm::value_ptr(tile_size));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>glUniform1ui(p_n_tiles_x,<sp/>n_tiles_x);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialise<sp/>light<sp/>management<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>Shader<sp/>Storage<sp/>Buffer<sp/>Objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>GLuint<sp/>ssbo_handles[3];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>glGenBuffers(3,<sp/>ssbo_handles);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>this-&gt;summed_indices_buffer<sp/>=<sp/>ssbo_handles[0];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>this-&gt;light_cluster_buffer<sp/>=<sp/>ssbo_handles[1];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>this-&gt;light_index_buffer<sp/>=<sp/>ssbo_handles[2];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>LightGrid<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>glBindBufferBase(GL_SHADER_STORAGE_BUFFER,<sp/>0,<sp/>this-&gt;summed_indices_buffer);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>glBindBufferBase(GL_SHADER_STORAGE_BUFFER,<sp/>1,<sp/>this-&gt;light_cluster_buffer);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>glBindBufferBase(GL_SHADER_STORAGE_BUFFER,<sp/>2,<sp/>this-&gt;light_index_buffer);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_SHADER_STORAGE_BUFFER,<sp/>0);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Link<sp/>usampler<sp/>k_tex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>GLint<sp/>p_k_index_texture<sp/>=<sp/>glGetUniformLocation(this-&gt;light_pass_sp,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;k_index_tex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>glUniform1i(p_k_index_texture,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_TEXTURE3);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>glUseProgram(0);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DeferredClusteredShader::renderGeometryPass()<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>glUseProgram(this-&gt;geometry_pass_sp);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>this-&gt;renderGeometryPassObjects();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>glUseProgram(0);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DeferredClusteredShader::renderLightPass()<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>this-&gt;p_clustered_light_manager-&gt;constructClusteringFrame();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>glUseProgram(this-&gt;light_pass_sp);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>this-&gt;loadLightClustering();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>this-&gt;renderLightPassObjects();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>glUseProgram(0);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DeferredClusteredShader::loadLightClustering()<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;GLuint&gt;&amp;<sp/>summed_indices<sp/>=<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;p_clustered_light_manager-&gt;getSummedIndicesData();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;glm::uvec2&gt;&amp;<sp/>light_clusters<sp/>=<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;p_clustered_light_manager-&gt;getLightClusterData();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;GLuint&gt;&amp;<sp/>light_indices<sp/>=</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;p_clustered_light_manager-&gt;getLightIndexData();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_SHADER_STORAGE_BUFFER,<sp/>this-&gt;summed_indices_buffer);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>glBufferData(GL_SHADER_STORAGE_BUFFER,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(GLuint)<sp/>*<sp/>summed_indices.size(),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summed_indices.data(),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_SHADER_STORAGE_BUFFER,<sp/>this-&gt;light_cluster_buffer);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>glBufferData(GL_SHADER_STORAGE_BUFFER,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(light_clusters[0])<sp/>*<sp/>light_clusters.size(),</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>light_clusters.data(),</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_SHADER_STORAGE_BUFFER,<sp/>this-&gt;light_index_buffer);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>glBufferData(GL_SHADER_STORAGE_BUFFER,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(GLuint)<sp/>*<sp/>light_indices.size(),<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>light_indices.data(),</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_SHADER_STORAGE_BUFFER,<sp/>0);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>glActiveTexture(GL_TEXTURE3);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>this-&gt;k_index_map);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>glActiveTexture(GL_TEXTURE0);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="nTiled/src/pipeline/deferred/shaders/DeferredClusteredShader.cpp"/>
  </compounddef>
</doxygen>
